worker_processes auto;

error_log /var/log/nginx/error.log warn;

events { worker_connections 2048; multi_accept on; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  # Map to ensure we always have an outbound X-Request-ID (use provided or generate $request_id)
  map $http_x_request_id $req_id {
    default $http_x_request_id;
    ''      $request_id;
  }
  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;
  keepalive_timeout  30s;
  keepalive_requests 1000;
  client_body_timeout 15s;
  client_header_timeout 15s;
  send_timeout 15s;
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 1024;
  server_tokens off;
  resolver 127.0.0.11 ipv6=off;

  limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 80;
    server_name localhost;

    # Basic Auth configuration (credentials file mounted at /etc/nginx/.htpasswd)
    # To generate: htpasswd -nb <user> <pass>  (Apache style) or openssl passwd -apr1 <pass>
    set $observability_protected 1; # feature flag style (set to 0 to disable quickly)
    if ($observability_protected = 1) { set $auth_basic Realm; }

    # Shared snippet macro via map not used for simplicity; apply per location.

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    location / {
      root /usr/share/nginx/html;
      try_files /index.html =404;
    }

    location /grafana/ {
      proxy_pass http://grafana:3000/;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $req_id;
      add_header X-Request-ID $req_id;
      auth_basic           "Restricted Grafana";
      auth_basic_user_file /etc/nginx/.htpasswd;
      limit_req zone=auth_limit burst=20 nodelay;
    }

    location /prometheus/ {
      proxy_pass http://prometheus:9090/;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $req_id;
      add_header X-Request-ID $req_id;
      auth_basic           "Restricted Prometheus";
      auth_basic_user_file /etc/nginx/.htpasswd;
      limit_req zone=auth_limit burst=10 nodelay;
    }

    location /alertmanager/ {
      proxy_pass http://alertmanager:9093/;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $req_id;
      add_header X-Request-ID $req_id;
      auth_basic           "Restricted Alertmanager";
      auth_basic_user_file /etc/nginx/.htpasswd;
      limit_req zone=auth_limit burst=10 nodelay;
    }

    location /api/ {
      proxy_pass http://api:8000/;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $req_id;
      add_header X-Request-ID $req_id;
    }

    location /web/ {
      proxy_pass http://web:80/;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $req_id;
      add_header X-Request-ID $req_id;
    }

    location /qcc/ {
      proxy_pass http://quantum_computing_center:5053/;
    }

    location /qcms/ {
      proxy_pass http://quantum_consciousness_merger:5081/;
    }

    location /qdc/ {
      proxy_pass http://quantum_deployment_center:5065/;
    }

    location /qindex/ {
      proxy_pass http://quantum_index:80/;
    }

    location /qcae/ {
      proxy_pass http://qcae:5106/;
    }

    # Agent service proxies (standardized internal port 8000)
    location /agents/ultimate/ {
      proxy_pass http://autogen-ultimate-enterprise-summary:8000/;
      # Optionally protect agent metrics endpoint only (pass-through others). Simple approach: protect all.
      proxy_set_header X-Request-ID $req_id;
      add_header X-Request-ID $req_id;
      auth_basic           "Restricted Agent";
      auth_basic_user_file /etc/nginx/.htpasswd;
    }
    location /agents/academic/ {
      proxy_pass http://autogen-academic-research-platform:8000/;
      proxy_set_header X-Request-ID $req_id;
      add_header X-Request-ID $req_id;
      auth_basic           "Restricted Agent";
      auth_basic_user_file /etc/nginx/.htpasswd;
    }
    location /agents/developer/ {
      proxy_pass http://autogen-developer-ecosystem-engine:8000/;
      proxy_set_header X-Request-ID $req_id;
      add_header X-Request-ID $req_id;
      auth_basic           "Restricted Agent";
      auth_basic_user_file /etc/nginx/.htpasswd;
    }
    location /agents/web-security/ {
      proxy_pass http://autogen-web-security-knowledge-platform:8000/;
      proxy_set_header X-Request-ID $req_id;
      add_header X-Request-ID $req_id;
      auth_basic           "Restricted Agent";
      auth_basic_user_file /etc/nginx/.htpasswd;
    }
    location /agents/topics/ {
      proxy_pass http://autogen-awesome-topics-discovery-engine:8000/;
      proxy_set_header X-Request-ID $req_id;
      add_header X-Request-ID $req_id;
      auth_basic           "Restricted Agent";
      auth_basic_user_file /etc/nginx/.htpasswd;
    }
  }
}
