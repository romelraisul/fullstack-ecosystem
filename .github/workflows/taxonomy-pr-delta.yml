name: Alert Taxonomy PR Delta Comment

on:
  pull_request:
    paths:
      - 'alerts_taxonomy.json'
      - 'scripts/sync_alert_taxonomy.py'
      - 'alerts_taxonomy.schema.json'
      - 'scripts/validate_taxonomy_schema.py'

jobs:
  pr-delta:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements-taxonomy.txt

      - name: Generate delta markdown
        id: delta
        env:
          BASE_REF: ${{ github.event.pull_request.base.sha }}
          HEAD_REF: ${{ github.event.pull_request.head.sha }}
        run: |
          python scripts/pr_taxonomy_delta.py > delta.md
          echo 'DELTA<<EOF' >> $GITHUB_OUTPUT
          sed 's/\r$//' delta.md >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const body = `ðŸ›Ž **Alert Taxonomy Delta**\n\n${{ toJSON(steps.delta.outputs.DELTA) }}`;
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const marker = '<!-- taxonomy-delta -->';
            const existing = comments.find(c => c.body && c.body.includes(marker));
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body: marker + '\n' + body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: marker + '\n' + body
              });
            }
