name: container-security-lite-minimal

on:
    push:
        branches:
            - main
    workflow_dispatch:
        inputs:
            image:
                description: "Container image reference (e.g. org/app:tag)"
                required: true
                default: "library/nginx:latest"
            extras:
                description: "JSON array of additional image refs to scan"
                required: false
                default: "[]"
            fail_critical:
                description: "Fail if critical vulns > 0"
                required: false
                default: "true"
            fail_high:
                description: "Fail if high vulns exceed threshold"
                required: false
                default: "0"
            trivy_severity:
                description: "Trivy severity filter"
                required: false
                default: "CRITICAL,HIGH,MEDIUM"

env:
    TRIVY_VERSION: 0.53.0
    GRYPE_VERSION: 0.77.0
    SYFT_VERSION: 1.0.0
    DEFAULT_IMAGE: ${{ github.event.inputs.image || 'library/nginx:latest' }}
    EXTRAS_INPUT: ${{ github.event.inputs.extras || '[]' }}
    FAIL_CRITICAL: ${{ github.event.inputs.fail_critical || 'true' }}
    FAIL_HIGH_THRESHOLD: ${{ github.event.inputs.fail_high || '0' }}
    TRIVY_SEVERITY: ${{ github.event.inputs.trivy_severity || 'CRITICAL,HIGH,MEDIUM' }}

jobs:
    sanity:
        runs-on: ubuntu-latest
        steps:
        - run: echo "Baseline OK"

    gather:
        runs-on: ubuntu-latest
        needs: sanity
        outputs:
            extras_json: ${{ steps.extras.outputs.json }}
        steps:
        - run: echo "Gather placeholder - ASCII only"
                - name: Set extras list
                    id: extras
                    run: echo 'json=[]' >> "$GITHUB_OUTPUT"

    primary:
        runs-on: ubuntu-latest
        needs: gather
        outputs:
            image_ref: ${{ steps.meta.outputs.image_ref }}
            image_digest: ${{ steps.digest.outputs.image_digest }}
        steps:
        - uses: actions/checkout@v4
                - name: Set image ref
                    id: meta
                    run: echo "image_ref=${DEFAULT_IMAGE}" >> "$GITHUB_OUTPUT"
                - name: Pull or build placeholder
                    run: echo "Pretend pull/build of ${DEFAULT_IMAGE}"
                - name: Set fake digest
                    id: digest
                    run: echo "image_digest=sha256:placeholder" >> "$GITHUB_OUTPUT"
        - run: mkdir -p artifacts/sarif artifacts/sbom artifacts/logs
