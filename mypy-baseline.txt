# mypy baseline - errors to be gradually fixed
# Generated with mypy mypy 1.18.2 (compiled: yes)
# Run 'python scripts/type_check.py --baseline' to regenerate

=== scripts/ ===
scripts\load_env.py: error: Source file found twice under different module names: "load_env" and "scripts.load_env"
scripts\load_env.py: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#mapping-file-paths-to-modules for more info
scripts\load_env.py: note: Common resolutions include: a) adding `__init__.py` somewhere, b) using `--explicit-package-bases` or adjusting MYPYPATH
Found 1 error in 1 file (errors prevented further checking)

Return code: 2

=== autogen/backend/ ===
autogen\backend\core\database.py:36:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\database.py:36:1: note: Use "-> None" if function does not return a value
autogen\backend\core\database.py:47:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\database.py:47:1: note: Use "-> None" if function does not return a value
autogen\backend\agents\custom\code_architect_agent.py:26:6: error: Untyped decorator makes function "handle_architecture_request" untyped  [misc]
autogen\backend\agents\custom\business_intelligence_agent.py:26:6: error: Untyped decorator makes function "handle_analytics_request" untyped  [misc]
autogen\backend\agents\custom\ai_research_agent.py:26:6: error: Untyped decorator makes function "handle_research_request" untyped  [misc]
autogen\backend\agents\base.py:23:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\base.py:37:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\base.py:37:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\base.py:97:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\base.py:102:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\base.py:111:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\base.py:111:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\base.py:141:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\base.py:141:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\base.py:172:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\base.py:172:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\base.py:203:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\base.py:203:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\base.py:234:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\base.py:234:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\base.py:266:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\base.py:266:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\base.py:298:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\base.py:298:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\base.py:329:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\base.py:329:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\base.py:360:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\base.py:360:5: note: Use "-> None" if function does not return a value
autogen\backend\services\agenda_manager.py:21:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\agenda_manager.py:28:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\agenda_manager.py:28:5: note: Use "-> None" if function does not return a value
autogen\backend\services\agent_builder.py:51:40: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
autogen\backend\services\agent_builder.py:53:26: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
autogen\backend\services\agent_builder.py:109:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\agent_builder.py:109:5: note: Use "-> None" if function does not return a value
autogen\backend\services\agent_builder.py:124:9: error: Call to untyped function "_initialize_default_templates" in typed context  [no-untyped-call]
autogen\backend\services\agent_builder.py:126:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\agent_builder.py:126:5: note: Use "-> None" if function does not return a value
autogen\backend\services\agent_builder.py:512:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\agent_builder.py:512:13: note: Left operand is of type "int | None"
autogen\backend\services\agent_builder.py:513:42: error: Incompatible types in assignment (expression has type "str", target has type "int | None")  [assignment]
autogen\backend\services\agent_builder.py:528:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\agent_builder.py:675:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\agent_builder.py:675:13: note: Left operand is of type "int | None"
autogen\backend\services\agent_builder.py:676:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\agent_builder.py:676:13: note: Left operand is of type "int | None"
autogen\backend\services\agent_builder.py:728:17: error: Unsupported operand types for - ("None" and "int")  [operator]
autogen\backend\services\agent_builder.py:728:17: note: Left operand is of type "int | None"
autogen\backend\services\agent_builder.py:732:13: error: Unsupported operand types for - ("None" and "int")  [operator]
autogen\backend\services\agent_builder.py:732:13: note: Left operand is of type "int | None"
autogen\backend\services\agent_builder.py:798:17: error: Call to untyped function "AgentBuilder" in typed context  [no-untyped-call]
autogen\backend\security\audit.py:99:31: error: Missing type parameters for generic type "deque"  [type-arg]
autogen\backend\security\audit.py:116:9: error: Call to untyped function "_start_monitoring" in typed context  [no-untyped-call]
autogen\backend\security\audit.py:120:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:171:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:185:41: error: Incompatible types in assignment (expression has type "str", target has type "bool")  [assignment]
autogen\backend\security\audit.py:198:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:214:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:226:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:241:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:260:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:287:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:299:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:317:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:337:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:356:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:372:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:418:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:427:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:427:5: note: Use "-> None" if function does not return a value
autogen\backend\security\audit.py:430:9: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:430:9: note: Use "-> None" if function does not return a value
autogen\backend\security\audit.py:434:21: error: Call to untyped function "_cleanup_old_data" in typed context  [no-untyped-call]
autogen\backend\security\audit.py:441:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\audit.py:441:5: note: Use "-> None" if function does not return a value
autogen\backend\security\audit.py:462:13: error: Need type annotation for "event_counts"  [var-annotated]
autogen\backend\security\audit.py:463:13: error: Need type annotation for "risk_counts"  [var-annotated]
autogen\backend\security\audit.py:464:13: error: Need type annotation for "top_ips"  [var-annotated]
autogen\backend\ai\model_trainer.py:28: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\ai\model_trainer.py:29: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\ai\model_trainer.py:30: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\ai\model_trainer.py:31: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\ai\model_trainer.py:32: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\ai\model_trainer.py:40: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\ai\model_trainer.py:42: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\ai\model_trainer.py:107:31: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
autogen\backend\ai\model_trainer.py:111:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:111:5: note: Use "-> None" if function does not return a value
autogen\backend\ai\model_trainer.py:113:13: error: Statement is unreachable  [unreachable]
autogen\backend\ai\model_trainer.py:152:33: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
autogen\backend\ai\model_trainer.py:163:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:163:5: note: Use "-> None" if function does not return a value
autogen\backend\ai\model_trainer.py:165:13: error: Statement is unreachable  [unreachable]
autogen\backend\ai\model_trainer.py:192:27: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
autogen\backend\ai\model_trainer.py:194:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:194:5: note: Use "-> None" if function does not return a value
autogen\backend\ai\model_trainer.py:196:13: error: Statement is unreachable  [unreachable]
autogen\backend\ai\model_trainer.py:221:46: error: Incompatible types in assignment (expression has type "None", variable has type "list[TrainingMetrics]")  [assignment]
autogen\backend\ai\model_trainer.py:222:31: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
autogen\backend\ai\model_trainer.py:227:35: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
autogen\backend\ai\model_trainer.py:228:23: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
autogen\backend\ai\model_trainer.py:231:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:231:5: note: Use "-> None" if function does not return a value
autogen\backend\ai\model_trainer.py:233:13: error: Statement is unreachable  [unreachable]
autogen\backend\ai\model_trainer.py:235:13: error: Statement is unreachable  [unreachable]
autogen\backend\ai\model_trainer.py:237:13: error: Statement is unreachable  [unreachable]
autogen\backend\ai\model_trainer.py:239:13: error: Statement is unreachable  [unreachable]
autogen\backend\ai\model_trainer.py:258:21: error: Invalid base class  [misc]
autogen\backend\ai\model_trainer.py:261:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\ai\model_trainer.py:262:41: error: Missing type parameters for generic type "list"  [type-arg]
autogen\backend\ai\model_trainer.py:269:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:272:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:405:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:464:19: error: Incompatible types in assignment (expression has type "TrainingJob | None", variable has type "TrainingJob")  [assignment]
autogen\backend\ai\model_trainer.py:590:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\ai\model_trainer.py:601:22: error: Incompatible types in assignment (expression has type "None", variable has type "list[Any | None]")  [assignment]
autogen\backend\ai\model_trainer.py:620:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:653:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:653:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\ai\model_trainer.py:668:13: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:672:13: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:683:24: error: Call to untyped function "ProgressCallback" in typed context  [no-untyped-call]
autogen\backend\ai\model_trainer.py:688:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:688:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\ai\model_trainer.py:719:39: error: Unsupported operand types for < ("float" and "None")  [operator]
autogen\backend\ai\model_trainer.py:719:39: note: Right operand is of type "float | None"
autogen\backend\ai\model_trainer.py:723:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:767:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:786:17: error: Returning Any from function declared to return "list[dict[str, Any]]"  [no-any-return]
autogen\backend\ai\model_trainer.py:812:13: error: Returning Any from function declared to return "list[dict[str, Any]]"  [no-any-return]
autogen\backend\ai\model_trainer.py:814:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\ai\model_trainer.py:828:13: error: Returning Any from function declared to return "float"  [no-any-return]
autogen\backend\ai\model_trainer.py:832:13: error: Returning Any from function declared to return "float"  [no-any-return]
autogen\backend\ai\model_trainer.py:945:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\ai\model_trainer.py:951:21: error: Unsupported operand types for / ("Path" and "None")  [operator]
autogen\backend\ai\model_trainer.py:951:21: note: Right operand is of type "str | Any | None"
autogen\backend\ai\model_trainer.py:957: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\agents\registry.py:48:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\registry.py:48:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\registry.py:58:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\registry.py:87:22: error: Incompatible default for argument "query" (default has type "None", argument has type "str")  [assignment]
autogen\backend\agents\registry.py:87:22: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\agents\registry.py:87:22: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\agents\registry.py:88:35: error: Incompatible default for argument "category" (default has type "None", argument has type "AgentCategory")  [assignment]
autogen\backend\agents\registry.py:88:35: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\agents\registry.py:88:35: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\agents\registry.py:89:47: error: Incompatible default for argument "capabilities" (default has type "None", argument has type "list[Any]")  [assignment]
autogen\backend\agents\registry.py:89:47: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\agents\registry.py:89:47: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\agents\registry.py:90:27: error: Incompatible default for argument "tags" (default has type "None", argument has type "list[str]")  [assignment]
autogen\backend\agents\registry.py:90:27: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\agents\registry.py:90:27: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\agents\registry.py:185:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\registry.py:219:18: error: Need type annotation for "issues"  [var-annotated]
autogen\backend\agents\registry.py:260:27: error: Call to untyped function "AgentRegistry" in typed context  [no-untyped-call]
autogen\backend\agents\registry.py:264:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\registry.py:271:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\registry.py:271:1: note: Use "-> None" if function does not return a value
autogen\backend\services\plugin_system.py:91:49: error: Incompatible default for argument "config" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\services\plugin_system.py:91:49: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\plugin_system.py:91:49: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\plugin_system.py:106:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\plugin_system.py:106:5: note: Use "-> None" if function does not return a value
autogen\backend\services\plugin_system.py:110:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\plugin_system.py:110:5: note: Use "-> None" if function does not return a value
autogen\backend\services\plugin_system.py:190:9: error: Need type annotation for "plugins" (hint: "plugins: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\plugin_system.py:191:9: error: Need type annotation for "hooks" (hint: "hooks: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\plugin_system.py:192:9: error: Need type annotation for "plugin_configs" (hint: "plugin_configs: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\plugin_system.py:193:9: error: Need type annotation for "dependency_graph" (hint: "dependency_graph: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\plugin_system.py:246:76: error: Incompatible default for argument "config" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\services\plugin_system.py:246:76: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\plugin_system.py:246:76: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\plugin_system.py:285:54: error: Argument 1 to "module_from_spec" has incompatible type "ModuleSpec | None"; expected "ModuleSpec"  [arg-type]
autogen\backend\services\plugin_system.py:286:13: error: Item "None" of "ModuleSpec | None" has no attribute "loader"  [union-attr]
autogen\backend\services\plugin_system.py:286:13: error: Item "None" of "Loader | Any | None" has no attribute "exec_module"  [union-attr]
autogen\backend\services\plugin_system.py:339:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\plugin_system.py:339:13: note: Left operand is of type "int | None"
autogen\backend\services\plugin_system.py:340:41: error: Incompatible types in assignment (expression has type "str", target has type "int | None")  [assignment]
autogen\backend\services\plugin_system.py:347:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\plugin_system.py:347:13: note: Left operand is of type "int | None"
autogen\backend\services\plugin_system.py:382:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\plugin_system.py:382:13: note: Left operand is of type "int | None"
autogen\backend\services\plugin_system.py:419:13: error: Unsupported operand types for - ("None" and "int")  [operator]
autogen\backend\services\plugin_system.py:419:13: note: Left operand is of type "int | None"
autogen\backend\services\plugin_system.py:448:13: error: Unsupported operand types for - ("None" and "int")  [operator]
autogen\backend\services\plugin_system.py:448:13: note: Left operand is of type "int | None"
autogen\backend\services\plugin_system.py:457:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\plugin_system.py:470:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\plugin_system.py:470:13: note: Left operand is of type "int | None"
autogen\backend\services\plugin_system.py:472:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\plugin_system.py:527:9: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\services\plugin_system.py:564:24: error: Need type annotation for "plugin_stats"  [var-annotated]
autogen\backend\services\plugin_system.py:586:20: error: Need type annotation for "manifest"  [var-annotated]
autogen\backend\agents\technical.py:37:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\technical.py:37:1: note: Use "-> None" if function does not return a value
autogen\backend\agents\technical.py:53:1: error: Call to untyped function "register_technical_agents" in typed context  [no-untyped-call]
autogen\backend\agents\research.py:15:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\research.py:15:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\research.py:16:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\research.py:63:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\research.py:63:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\research.py:64:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\research.py:101:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\research.py:101:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\research.py:102:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\research.py:146:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\research.py:146:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\research.py:147:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\research.py:194:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\research.py:194:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\research.py:195:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\research.py:239:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\research.py:239:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\research.py:240:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\research.py:284:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\research.py:284:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\research.py:285:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\research.py:326:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\research.py:326:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\research.py:327:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\research.py:371:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\research.py:371:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\research.py:372:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\research.py:417:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\research.py:417:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\research.py:418:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\research.py:460:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\research.py:460:1: note: Use "-> None" if function does not return a value
autogen\backend\agents\research.py:692:1: error: Call to untyped function "register_research_agents" in typed context  [no-untyped-call]
autogen\backend\agents\operations.py:20:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\operations.py:20:1: note: Use "-> None" if function does not return a value
autogen\backend\agents\operations.py:36:1: error: Call to untyped function "register_operations_agents" in typed context  [no-untyped-call]
autogen\backend\agents\legal.py:20:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\legal.py:20:1: note: Use "-> None" if function does not return a value
autogen\backend\agents\legal.py:36:1: error: Call to untyped function "register_legal_agents" in typed context  [no-untyped-call]
autogen\backend\agents\healthcare.py:22:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\healthcare.py:22:1: note: Use "-> None" if function does not return a value
autogen\backend\agents\healthcare.py:38:1: error: Call to untyped function "register_healthcare_agents" in typed context  [no-untyped-call]
autogen\backend\agents\gaming.py:20:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\gaming.py:20:1: note: Use "-> None" if function does not return a value
autogen\backend\agents\gaming.py:36:1: error: Call to untyped function "register_gaming_agents" in typed context  [no-untyped-call]
autogen\backend\agents\education.py:20:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\education.py:20:1: note: Use "-> None" if function does not return a value
autogen\backend\agents\education.py:36:1: error: Call to untyped function "register_education_agents" in typed context  [no-untyped-call]
autogen\backend\agents\creative.py:24:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\creative.py:24:1: note: Use "-> None" if function does not return a value
autogen\backend\agents\creative.py:40:1: error: Call to untyped function "register_creative_agents" in typed context  [no-untyped-call]
autogen\backend\agents\business.py:15:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\business.py:15:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\business.py:16:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\business.py:49:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\business.py:49:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\business.py:50:9: error: Call to untyped function "_initialize_specialization" in typed context  [no-untyped-call]
autogen\backend\agents\business.py:108:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\business.py:108:1: note: Use "-> None" if function does not return a value
autogen\backend\agents\business.py:158:1: error: Call to untyped function "register_business_agents" in typed context  [no-untyped-call]
autogen\backend\core\celery_app.py:45:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\celery_app.py:96:1: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\core\celery_app.py:105:1: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\core\celery_app.py:113:1: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\core\celery_app.py:125:1: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\core\celery_app.py:139:1: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\core\models.py:216:28: error: No overload variant of "Field" matches argument types "EllipsisType", "int"  [call-overload]
autogen\backend\core\models.py:216:28: note: Possible overload variants:
autogen\backend\core\models.py:216:28: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\models.py:216:28: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\models.py:216:28: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\models.py:216:28: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\models.py:236:28: error: No overload variant of "Field" matches argument types "EllipsisType", "int"  [call-overload]
autogen\backend\core\models.py:236:28: note: Possible overload variants:
autogen\backend\core\models.py:236:28: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\models.py:236:28: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\models.py:236:28: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\models.py:236:28: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\models.py:246:28: error: No overload variant of "Field" matches argument types "EllipsisType", "int"  [call-overload]
autogen\backend\core\models.py:246:28: note: Possible overload variants:
autogen\backend\core\models.py:246:28: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\models.py:246:28: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\models.py:246:28: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\models.py:246:28: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\models.py:304:15: error: Variable "autogen.backend.core.models.Base" is not valid as a type  [valid-type]
autogen\backend\core\models.py:304:15: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
autogen\backend\core\models.py:304:15: error: Invalid base class "Base"  [misc]
autogen\backend\core\models.py:320:22: error: Variable "autogen.backend.core.models.Base" is not valid as a type  [valid-type]
autogen\backend\core\models.py:320:22: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
autogen\backend\core\models.py:320:22: error: Invalid base class "Base"  [misc]
autogen\backend\core\models.py:337:17: error: Variable "autogen.backend.core.models.Base" is not valid as a type  [valid-type]
autogen\backend\core\models.py:337:17: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
autogen\backend\core\models.py:337:17: error: Invalid base class "Base"  [misc]
autogen\backend\core\models.py:353:14: error: Variable "autogen.backend.core.models.Base" is not valid as a type  [valid-type]
autogen\backend\core\models.py:353:14: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
autogen\backend\core\models.py:353:14: error: Invalid base class "Base"  [misc]
autogen\backend\core\models.py:377:14: error: Variable "autogen.backend.core.models.Base" is not valid as a type  [valid-type]
autogen\backend\core\models.py:377:14: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
autogen\backend\core\models.py:377:14: error: Invalid base class "Base"  [misc]
autogen\backend\core\models.py:395:22: error: Variable "autogen.backend.core.models.Base" is not valid as a type  [valid-type]
autogen\backend\core\models.py:395:22: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
autogen\backend\core\models.py:395:22: error: Invalid base class "Base"  [misc]
autogen\backend\core\models.py:413:23: error: Variable "autogen.backend.core.models.Base" is not valid as a type  [valid-type]
autogen\backend\core\models.py:413:23: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
autogen\backend\core\models.py:413:23: error: Invalid base class "Base"  [misc]
autogen\backend\core\metrics_server.py:7:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\metrics_server.py:7:1: note: Use "-> None" if function does not return a value
autogen\backend\core\metrics_server.py:22:5: error: Call to untyped function "MultiProcessCollector" in typed context  [no-untyped-call]
autogen\backend\core\metrics_server.py:33:5: error: Call to untyped function "main" in typed context  [no-untyped-call]
autogen\backend\test_security.py:27:9: error: Need type annotation for "test_results" (hint: "test_results: list[<type>] = ...")  [var-annotated]
autogen\backend\test_security.py:178:9: error: Statement is unreachable  [unreachable]
autogen\backend\test_security.py:206:9: error: Statement is unreachable  [unreachable]
autogen\backend\test_security.py:224:9: error: Statement is unreachable  [unreachable]
autogen\backend\test_security.py:242:9: error: Statement is unreachable  [unreachable]
autogen\backend\test_security.py:281:9: error: Statement is unreachable  [unreachable]
autogen\backend\test_security.py:299:9: error: Statement is unreachable  [unreachable]
autogen\backend\test_security.py:316:9: error: Statement is unreachable  [unreachable]
autogen\backend\test_security.py:333:9: error: Statement is unreachable  [unreachable]
autogen\backend\test_security.py:412:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\test_security.py:436:15: error: Call to untyped function "main" in typed context  [no-untyped-call]
autogen\backend\test_complete_system.py:24:9: error: Need type annotation for "test_results" (hint: "test_results: list[<type>] = ...")  [var-annotated]
autogen\backend\test_complete_system.py:113:9: error: Call to untyped function "print_system_status_summary" in typed context  [no-untyped-call]
autogen\backend\test_complete_system.py:122:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\test_complete_system.py:122:5: note: Use "-> None" if function does not return a value
autogen\backend\test_complete_system.py:347:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\test_complete_system.py:386:15: error: Call to untyped function "main" in typed context  [no-untyped-call]
autogen\backend\test_ai_system.py:25:9: error: Need type annotation for "test_results" (hint: "test_results: list[<type>] = ...")  [var-annotated]
autogen\backend\test_ai_system.py:322:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\test_ai_system.py:346:15: error: Call to untyped function "main" in typed context  [no-untyped-call]
autogen\backend\simple_test.py:12:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\simple_test.py:136:15: error: Call to untyped function "test_backend" in typed context  [no-untyped-call]
autogen\backend\sdks\python\autogen_client\client.py:60:15: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\sdks\python\autogen_client\client.py:61:16: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\sdks\python\autogen_client\client.py:62:17: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\sdks\python\autogen_client\client.py:72:31: error: "MutableMapping[str, str | bytes]" has no attribute "copy"  [attr-defined]
autogen\backend\sdks\python\autogen_client\client.py:105:17: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\sdks\python\autogen_client\client.py:163:32: error: Incompatible default for argument "agent_ids" (default has type "None", argument has type "list[str]")  [assignment]
autogen\backend\sdks\python\autogen_client\client.py:163:32: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\sdks\python\autogen_client\client.py:163:32: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\sdks\python\autogen_client\client.py:183:9: error: Returning Any from function declared to return "list[dict[str, Any]]"  [no-any-return]
autogen\backend\sdks\python\autogen_client\client.py:210:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\sdks\python\autogen_client\client.py:268:36: error: Incompatible default for argument "metadata" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\sdks\python\autogen_client\client.py:268:36: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\sdks\python\autogen_client\client.py:268:36: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\sdks\python\autogen_client\client.py:283:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\sdks\python\autogen_client\client.py:337:9: error: Returning Any from function declared to return "list[dict[str, Any]]"  [no-any-return]
autogen\backend\sdks\python\autogen_client\client.py:343:9: error: Returning Any from function declared to return "list[dict[str, Any]]"  [no-any-return]
autogen\backend\sdks\python\autogen_client\client.py:366:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\sdks\python\autogen_client\client.py:369:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\run_tests.py:16:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\run_tests.py:88:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\run_tests.py:88:41: error: Missing type parameters for generic type "list"  [type-arg]
autogen\backend\run_tests.py:127:27: error: Call to untyped function "main" in typed context  [no-untyped-call]
autogen\backend\training\fast_trainer_simple.py:24:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\training\fast_trainer_simple.py:54:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\training\fast_trainer_simple.py:62:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\training\fast_trainer_simple.py:76:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\training\fast_trainer_simple.py:101:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\training\fast_trainer_simple.py:103:21: error: Call to untyped function "_generate_training_data" in typed context  [no-untyped-call]
autogen\backend\training\fast_trainer_simple.py:105:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\training\fast_trainer_simple.py:141:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\training\fast_trainer_simple.py:144:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\training\fast_trainer_simple.py:148:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\training\fast_trainer_simple.py:157:13: error: Call to untyped function "SimpleFastModel" in typed context  [no-untyped-call]
autogen\backend\training\fast_trainer_simple.py:165:15: error: Call to untyped function "SimpleDataset" in typed context  [no-untyped-call]
autogen\backend\training\fast_trainer_simple.py:312:26: error: Call to untyped function "train_simple_fast_model" in typed context  [no-untyped-call]
autogen\backend\services\performance_monitor.py:21:1: error: Library stubs not installed for "aiofiles"  [import-untyped]
autogen\backend\services\performance_monitor.py:21:1: note: Hint: "python3 -m pip install types-aiofiles"
autogen\backend\services\performance_monitor.py:21:1: note: (or run "mypy --install-types" to install all missing stub packages)
autogen\backend\services\performance_monitor.py:21:1: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
autogen\backend\services\performance_monitor.py:80:34: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
autogen\backend\services\performance_monitor.py:88:31: error: Missing type parameters for generic type "deque"  [type-arg]
autogen\backend\services\performance_monitor.py:89:30: error: Missing type parameters for generic type "deque"  [type-arg]
autogen\backend\services\performance_monitor.py:96:38: error: Need type annotation for "model_inference_times"  [var-annotated]
autogen\backend\services\performance_monitor.py:98:9: error: Need type annotation for "agent_metrics"  [var-annotated]
autogen\backend\services\performance_monitor.py:106:9: error: Need type annotation for "memory_snapshots" (hint: "memory_snapshots: list[<type>] = ...")  [var-annotated]
autogen\backend\services\performance_monitor.py:111:31: error: Missing type parameters for generic type "Task"  [type-arg]
autogen\backend\services\performance_monitor.py:113:9: error: Call to untyped function "_init_database" in typed context  [no-untyped-call]
autogen\backend\services\performance_monitor.py:115:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:115:5: note: Use "-> None" if function does not return a value
autogen\backend\services\performance_monitor.py:222:20: error: Incompatible return value type (got "None", expected "PerformanceMetrics")  [return-value]
autogen\backend\services\performance_monitor.py:250:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:263:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:283:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:287:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:287:82: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\performance_monitor.py:287:89: error: Incompatible default for argument "metadata" (default has type "None", argument has type "dict[Any, Any]")  [assignment]
autogen\backend\services\performance_monitor.py:287:89: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\performance_monitor.py:287:89: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\performance_monitor.py:361:40: error: Argument 1 to "append" of "list" has incompatible type "dict[int, int]"; expected "list[int]"  [arg-type]
autogen\backend\services\performance_monitor.py:362:40: error: Argument 1 to "append" of "list" has incompatible type "set[int]"; expected "list[int]"  [arg-type]
autogen\backend\services\performance_monitor.py:491:9: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:575:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:595:9: error: Need type annotation for "suggestions" (hint: "suggestions: list[<type>] = ...")  [var-annotated]
autogen\backend\services\performance_monitor.py:811:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:823:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:823:5: note: Use "-> None" if function does not return a value
autogen\backend\services\performance_monitor.py:842:52: error: Call to untyped function "_monitoring_loop" in typed context  [no-untyped-call]
autogen\backend\services\performance_monitor.py:844:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:844:5: note: Use "-> None" if function does not return a value
autogen\backend\services\performance_monitor.py:864:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:864:5: note: Use "-> None" if function does not return a value
autogen\backend\services\performance_monitor.py:889:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:1012:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:1053:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:1053:1: note: Use "-> None" if function does not return a value
autogen\backend\services\performance_monitor.py:1057:15: error: Call to untyped function "start_monitoring" in typed context  [no-untyped-call]
autogen\backend\services\performance_monitor.py:1063:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\performance_monitor.py:1063:1: note: Use "-> None" if function does not return a value
autogen\backend\services\performance_monitor.py:1067:15: error: Call to untyped function "stop_monitoring" in typed context  [no-untyped-call]
autogen\backend\services\document_processor.py:21: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\document_processor.py:26: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\document_processor.py:31: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\document_processor.py:34: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\document_processor.py:76:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\document_processor.py:76:5: note: Use "-> None" if function does not return a value
autogen\backend\services\document_processor.py:78:9: error: Call to untyped function "_setup_clients" in typed context  [no-untyped-call]
autogen\backend\services\document_processor.py:104:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\document_processor.py:104:5: note: Use "-> None" if function does not return a value
autogen\backend\services\document_processor.py:110: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\document_processor.py:183:13: error: Unsupported operand types for + ("object" and "int")  [operator]
autogen\backend\services\document_processor.py:244:29: error: "Collection[str]" has no attribute "append"  [attr-defined]
autogen\backend\services\document_processor.py:269:37: error: "Collection[str]" has no attribute "append"  [attr-defined]
autogen\backend\services\document_processor.py:295:33: error: "Collection[str]" has no attribute "append"  [attr-defined]
autogen\backend\services\document_processor.py:318:44: error: "Collection[str]" has no attribute "split"  [attr-defined]
autogen\backend\services\document_processor.py:319:55: error: "Collection[str]" has no attribute "split"  [attr-defined]
autogen\backend\services\document_processor.py:390:29: error: "Collection[str]" has no attribute "append"  [attr-defined]
autogen\backend\services\document_processor.py:407:44: error: "Collection[str]" has no attribute "split"  [attr-defined]
autogen\backend\services\document_processor.py:414:29: error: Value of type "Collection[str]" is not indexable  [index]
autogen\backend\services\document_processor.py:480:29: error: "Collection[str]" has no attribute "append"  [attr-defined]
autogen\backend\services\document_processor.py:498:38: error: Generator has incompatible item type "int"; expected "bool"  [misc]
autogen\backend\services\document_processor.py:498:48: error: Invalid index type "str" for "str"; expected type "SupportsIndex | slice[Any, Any, Any]"  [index]
autogen\backend\services\document_processor.py:505:47: error: Invalid index type "str" for "str"; expected type "SupportsIndex | slice[Any, Any, Any]"  [index]
autogen\backend\services\document_processor.py:506:47: error: Invalid index type "str" for "str"; expected type "SupportsIndex | slice[Any, Any, Any]"  [index]
autogen\backend\services\document_processor.py:507:50: error: Invalid index type "str" for "str"; expected type "SupportsIndex | slice[Any, Any, Any]"  [index]
autogen\backend\services\document_processor.py:630:21: error: "Collection[str]" has no attribute "append"  [attr-defined]
autogen\backend\services\document_processor.py:685:33: error: Item "None" of "Any | None" has no attribute "chat"  [union-attr]
autogen\backend\services\document_processor.py:708:33: error: Item "None" of "Any | None" has no attribute "chat"  [union-attr]
autogen\backend\services\document_processor.py:715:58: error: Incompatible types in assignment (expression has type "dict[str, Any]", target has type "list[Any]")  [assignment]
autogen\backend\services\document_processor.py:721:58: error: Incompatible types in assignment (expression has type "dict[str, object]", target has type "list[Any]")  [assignment]
autogen\backend\services\document_processor.py:732:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\document_processor.py:734:9: error: Unsupported operand types for + ("object" and "int")  [operator]
autogen\backend\services\document_processor.py:735:9: error: Unsupported operand types for + ("object" and "float")  [operator]
autogen\backend\services\document_processor.py:738:12: error: Unsupported right operand type for in ("object")  [operator]
autogen\backend\services\document_processor.py:739:13: error: Unsupported target for indexed assignment ("object")  [index]
autogen\backend\services\document_processor.py:740:9: error: Value of type "object" is not indexable  [index]
autogen\backend\services\document_processor.py:740:9: error: Unsupported target for indexed assignment ("object")  [index]
autogen\backend\services\document_processor.py:745:13: error: Unsupported left operand type for / ("object")  [operator]
autogen\backend\services\document_processor.py:746:16: error: Unsupported operand types for < ("int" and "object")  [operator]
autogen\backend\services\document_processor.py:756:17: error: Unsupported left operand type for / ("object")  [operator]
autogen\backend\services\document_processor.py:757:20: error: Unsupported operand types for < ("int" and "object")  [operator]
autogen\backend\services\document_processor.py:767:22: error: Call to untyped function "DocumentProcessor" in typed context  [no-untyped-call]
autogen\backend\services\disk_cleanup.py:50:48: error: Incompatible default for argument "config" (default has type "None", argument has type "CleanupConfig")  [assignment]
autogen\backend\services\disk_cleanup.py:50:48: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\disk_cleanup.py:50:48: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\disk_cleanup.py:52:30: error: Need type annotation for "cleanup_stats"  [var-annotated]
autogen\backend\services\disk_cleanup.py:72:9: error: Call to untyped function "_ensure_cleanup_dirs" in typed context  [no-untyped-call]
autogen\backend\services\disk_cleanup.py:74:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\disk_cleanup.py:74:5: note: Use "-> None" if function does not return a value
autogen\backend\services\disk_cleanup.py:101:13: error: Returning Any from function declared to return "bool"  [no-any-return]
autogen\backend\services\disk_cleanup.py:128:29: error: Unsupported operand types for + ("object" and "float")  [operator]
autogen\backend\services\disk_cleanup.py:130:29: error: Unsupported operand types for + ("object" and "int")  [operator]
autogen\backend\services\disk_cleanup.py:135:21: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\disk_cleanup.py:140:13: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\disk_cleanup.py:165:33: error: Unsupported operand types for + ("object" and "float")  [operator]
autogen\backend\services\disk_cleanup.py:167:33: error: Unsupported operand types for + ("object" and "int")  [operator]
autogen\backend\services\disk_cleanup.py:171:25: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\disk_cleanup.py:176:17: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\disk_cleanup.py:225:29: error: Unsupported operand types for + ("object" and "float")  [operator]
autogen\backend\services\disk_cleanup.py:227:29: error: Unsupported operand types for + ("object" and "int")  [operator]
autogen\backend\services\disk_cleanup.py:232:25: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\disk_cleanup.py:237:17: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\disk_cleanup.py:286:13: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\disk_cleanup.py:319:37: error: Unsupported operand types for + ("object" and "int")  [operator]
autogen\backend\services\disk_cleanup.py:320:37: error: Unsupported operand types for + ("object" and "float")  [operator]
autogen\backend\services\disk_cleanup.py:333:25: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\disk_cleanup.py:359:13: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\disk_cleanup.py:391:17: error: Unsupported target for indexed assignment ("object")  [index]
autogen\backend\services\disk_cleanup.py:394:17: error: "object" has no attribute "extend"  [attr-defined]
autogen\backend\services\disk_cleanup.py:398:17: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\disk_cleanup.py:405:46: error: Incompatible types in assignment (expression has type "object", target has type "list[Any] | int | None")  [assignment]
autogen\backend\services\disk_cleanup.py:406:9: error: No overload variant of "__add__" of "list" matches argument type "object"  [operator]
autogen\backend\services\disk_cleanup.py:406:9: note: Possible overload variants:
autogen\backend\services\disk_cleanup.py:406:9: note:     def __add__(self, list[Any], /) -> list[Any]
autogen\backend\services\disk_cleanup.py:406:9: note:     def [_S] __add__(self, list[_S], /) -> list[_S | Any]
autogen\backend\services\disk_cleanup.py:406:9: error: Unsupported left operand type for + ("None")  [operator]
autogen\backend\services\disk_cleanup.py:406:9: note: Left operand is of type "list[Any] | int | None"
autogen\backend\services\disk_cleanup.py:406:48: error: Unsupported operand types for + ("int" and "object")  [operator]
autogen\backend\services\disk_cleanup.py:407:9: error: No overload variant of "__add__" of "list" matches argument type "object"  [operator]
autogen\backend\services\disk_cleanup.py:407:9: note: Possible overload variants:
autogen\backend\services\disk_cleanup.py:407:9: note:     def __add__(self, list[Any], /) -> list[Any]
autogen\backend\services\disk_cleanup.py:407:9: note:     def [_S] __add__(self, list[_S], /) -> list[_S | Any]
autogen\backend\services\disk_cleanup.py:407:9: error: Unsupported left operand type for + ("None")  [operator]
autogen\backend\services\disk_cleanup.py:407:9: note: Left operand is of type "list[Any] | int | None"
autogen\backend\services\disk_cleanup.py:407:49: error: Unsupported operand types for + ("int" and "object")  [operator]
autogen\backend\services\disk_cleanup.py:408:9: error: No overload variant of "__add__" of "list" matches argument type "int"  [operator]
autogen\backend\services\disk_cleanup.py:408:9: note: Possible overload variants:
autogen\backend\services\disk_cleanup.py:408:9: note:     def __add__(self, list[Any], /) -> list[Any]
autogen\backend\services\disk_cleanup.py:408:9: note:     def [_S] __add__(self, list[_S], /) -> list[_S | Any]
autogen\backend\services\disk_cleanup.py:408:9: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\disk_cleanup.py:408:9: note: Left operand is of type "list[Any] | int | None"
autogen\backend\services\disk_cleanup.py:409:9: error: Item "int" of "list[Any] | int | None" has no attribute "extend"  [union-attr]
autogen\backend\services\disk_cleanup.py:409:9: error: Item "None" of "list[Any] | int | None" has no attribute "extend"  [union-attr]
autogen\backend\services\disk_cleanup.py:409:45: error: Value of type "object" is not indexable  [index]
autogen\backend\services\disk_cleanup.py:446:17: error: Unsupported target for indexed assignment ("object")  [index]
autogen\backend\services\disk_cleanup.py:448:17: error: "object" has no attribute "extend"  [attr-defined]
autogen\backend\services\disk_cleanup.py:452:17: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\disk_cleanup.py:477:41: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
autogen\backend\services\disk_cleanup.py:495:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\disk_cleanup.py:510:67: error: Call to untyped function "_check_emergency_cleanup" in typed context  [no-untyped-call]
autogen\backend\services\disk_cleanup.py:514:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\disk_cleanup.py:514:5: note: Use "-> None" if function does not return a value
autogen\backend\services\disk_cleanup.py:528:43: error: Argument 1 to "round" has incompatible type "list[Any] | int | None"; expected "_SupportsRound2[int]"  [arg-type]
autogen\backend\services\disk_cleanup.py:537:30: error: Value of type "list[Any] | int | None" is not indexable  [index]
autogen\backend\services\disk_cleanup.py:545:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\disk_cleanup.py:545:5: note: Use "-> None" if function does not return a value
autogen\backend\services\disk_cleanup.py:549:9: error: Call to untyped function "schedule_cleanups" in typed context  [no-untyped-call]
autogen\backend\services\disk_cleanup.py:565:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\disk_cleanup.py:565:1: note: Use "-> None" if function does not return a value
autogen\backend\services\disk_cleanup.py:576:25: error: Call to untyped function "start_cleanup_scheduler" in typed context  [no-untyped-call]
autogen\backend\services\disk_cleanup.py:595:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\disk_cleanup.py:595:5: note: Use "-> None" if function does not return a value
autogen\backend\services\disk_cleanup.py:612:17: error: Call to untyped function "test_cleanup" in typed context  [no-untyped-call]
autogen\backend\services\agent_orchestrator.py:25:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\agent_orchestrator.py:25:5: note: Use "-> None" if function does not return a value
autogen\backend\services\agent_orchestrator.py:56:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\agent_orchestrator.py:74:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\agent_orchestrator.py:452:13: error: Returning Any from function declared to return "str"  [no-any-return]
autogen\backend\services\agent_orchestrator.py:465:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\agent_orchestrator.py:479:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\advanced_orchestrator.py:49:29: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
autogen\backend\services\advanced_orchestrator.py:55:18: error: Incompatible types in assignment (expression has type "None", variable has type "str")  [assignment]
autogen\backend\services\advanced_orchestrator.py:70:28: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
autogen\backend\services\advanced_orchestrator.py:75:18: error: Incompatible types in assignment (expression has type "None", variable has type "str")  [assignment]
autogen\backend\services\advanced_orchestrator.py:76:32: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
autogen\backend\services\advanced_orchestrator.py:78:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\advanced_orchestrator.py:78:5: note: Use "-> None" if function does not return a value
autogen\backend\services\advanced_orchestrator.py:80:13: error: Statement is unreachable  [unreachable]
autogen\backend\services\advanced_orchestrator.py:82:13: error: Statement is unreachable  [unreachable]
autogen\backend\services\advanced_orchestrator.py:307:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\advanced_orchestrator.py:307:5: note: Use "-> None" if function does not return a value
autogen\backend\services\advanced_orchestrator.py:319:64: error: Incompatible default for argument "parameters" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\services\advanced_orchestrator.py:319:64: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\advanced_orchestrator.py:319:64: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\advanced_orchestrator.py:319:89: error: Incompatible default for argument "workflow_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\services\advanced_orchestrator.py:347:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\advanced_orchestrator.py:370:13: error: Need type annotation for "executed_tasks" (hint: "executed_tasks: set[<type>] = ...")  [var-annotated]
autogen\backend\services\advanced_orchestrator.py:371:13: error: Need type annotation for "results" (hint: "results: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\advanced_orchestrator.py:467:25: error: Missing type parameters for generic type "set"  [type-arg]
autogen\backend\services\advanced_orchestrator.py:571:22: error: Incompatible types in assignment (expression has type "dict[str, bool]", variable has type "str")  [assignment]
autogen\backend\services\advanced_orchestrator.py:573:22: error: Incompatible types in assignment (expression has type "Any | None", variable has type "str")  [assignment]
autogen\backend\services\advanced_orchestrator.py:603:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\advanced_orchestrator.py:620:24: error: Incompatible types in assignment (expression has type "Workflow | None", variable has type "Workflow")  [assignment]
autogen\backend\services\advanced_orchestrator.py:684:25: error: Call to untyped function "AdvancedOrchestrator" in typed context  [no-untyped-call]
autogen\backend\scripts\windows_disk_cleanup.py:20:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\scripts\windows_disk_cleanup.py:20:5: note: Use "-> None" if function does not return a value
autogen\backend\scripts\windows_disk_cleanup.py:92:29: error: Unsupported operand types for + ("object" and "int")  [operator]
autogen\backend\scripts\windows_disk_cleanup.py:93:29: error: Unsupported operand types for + ("object" and "float")  [operator]
autogen\backend\scripts\windows_disk_cleanup.py:101:29: error: Unsupported operand types for + ("object" and "int")  [operator]
autogen\backend\scripts\windows_disk_cleanup.py:108:25: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\scripts\windows_disk_cleanup.py:112:17: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\scripts\windows_disk_cleanup.py:137:17: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\scripts\windows_disk_cleanup.py:142:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\scripts\windows_disk_cleanup.py:142:72: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\scripts\windows_disk_cleanup.py:327:17: error: Unsupported target for indexed assignment ("object")  [index]
autogen\backend\scripts\windows_disk_cleanup.py:331:21: error: Value of type "object" is not indexable  [index]
autogen\backend\scripts\windows_disk_cleanup.py:331:21: error: Unsupported target for indexed assignment ("object")  [index]
autogen\backend\scripts\windows_disk_cleanup.py:339:25: error: Value of type "object" is not indexable  [index]
autogen\backend\scripts\windows_disk_cleanup.py:339:25: error: Unsupported target for indexed assignment ("object")  [index]
autogen\backend\scripts\windows_disk_cleanup.py:341:25: error: Value of type "object" is not indexable  [index]
autogen\backend\scripts\windows_disk_cleanup.py:341:25: error: Unsupported target for indexed assignment ("object")  [index]
autogen\backend\scripts\windows_disk_cleanup.py:346:21: error: Value of type "object" is not indexable  [index]
autogen\backend\scripts\windows_disk_cleanup.py:346:21: error: Unsupported target for indexed assignment ("object")  [index]
autogen\backend\scripts\windows_disk_cleanup.py:349:17: error: Unsupported target for indexed assignment ("object")  [index]
autogen\backend\scripts\windows_disk_cleanup.py:350:17: error: Value of type "object" is not indexable  [index]
autogen\backend\scripts\windows_disk_cleanup.py:350:17: error: Unsupported target for indexed assignment ("object")  [index]
autogen\backend\scripts\windows_disk_cleanup.py:359:15: error: Value of type "object" is not indexable  [index]
autogen\backend\scripts\windows_disk_cleanup.py:366:19: error: Call to untyped function "WindowsDiskCleaner" in typed context  [no-untyped-call]
autogen\backend\scripts\windows_disk_cleanup.py:376:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\scripts\windows_disk_cleanup.py:376:5: note: Use "-> None" if function does not return a value
autogen\backend\scripts\windows_disk_cleanup.py:377:19: error: Call to untyped function "WindowsDiskCleaner" in typed context  [no-untyped-call]
autogen\backend\scripts\windows_disk_cleanup.py:381:17: error: Call to untyped function "test_windows_cleanup" in typed context  [no-untyped-call]
autogen\backend\models\fast_agent_model.py:50:25: error: Need type annotation for "kv_cache"  [var-annotated]
autogen\backend\models\fast_agent_model.py:52:57: error: Incompatible default for argument "cache_key" (default has type "None", argument has type "str")  [assignment]
autogen\backend\models\fast_agent_model.py:52:57: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\models\fast_agent_model.py:52:57: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\models\fast_agent_model.py:120:57: error: Incompatible default for argument "cache_key" (default has type "None", argument has type "str")  [assignment]
autogen\backend\models\fast_agent_model.py:120:57: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\models\fast_agent_model.py:120:57: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\models\fast_agent_model.py:173:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\models\fast_agent_model.py:202:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\models\fast_agent_model.py:349:9: error: Returning Any from function declared to return "float"  [no-any-return]
autogen\backend\integrations\workflow_automation.py:36:31: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
autogen\backend\integrations\workflow_automation.py:39:28: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
autogen\backend\integrations\workflow_automation.py:40:28: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
autogen\backend\integrations\workflow_automation.py:41:30: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
autogen\backend\integrations\workflow_automation.py:44:18: error: Incompatible types in assignment (expression has type "None", variable has type "str")  [assignment]
autogen\backend\integrations\workflow_automation.py:46:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\integrations\workflow_automation.py:46:5: note: Use "-> None" if function does not return a value
autogen\backend\integrations\workflow_automation.py:48:13: error: Statement is unreachable  [unreachable]
autogen\backend\integrations\workflow_automation.py:50:13: error: Statement is unreachable  [unreachable]
autogen\backend\integrations\workflow_automation.py:60:28: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
autogen\backend\integrations\workflow_automation.py:62:32: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
autogen\backend\integrations\workflow_automation.py:64:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\integrations\workflow_automation.py:64:5: note: Use "-> None" if function does not return a value
autogen\backend\integrations\workflow_automation.py:66:13: error: Statement is unreachable  [unreachable]
autogen\backend\integrations\workflow_automation.py:68:13: error: Statement is unreachable  [unreachable]
autogen\backend\integrations\workflow_automation.py:74:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\integrations\workflow_automation.py:74:5: note: Use "-> None" if function does not return a value
autogen\backend\integrations\workflow_automation.py:76:39: error: Missing type parameters for generic type "Task"  [type-arg]
autogen\backend\integrations\workflow_automation.py:78:27: error: Need type annotation for "task_queue"  [var-annotated]
autogen\backend\integrations\workflow_automation.py:80:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\integrations\workflow_automation.py:80:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\integrations\workflow_automation.py:88:9: error: Need type annotation for "tasks" (hint: "tasks: list[<type>] = ...")  [var-annotated]
autogen\backend\integrations\workflow_automation.py:149:9: error: Need type annotation for "graph" (hint: "graph: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\integrations\workflow_automation.py:164:9: error: Need type annotation for "completed_tasks" (hint: "completed_tasks: set[<type>] = ...")  [var-annotated]
autogen\backend\integrations\workflow_automation.py:208:5: error: Missing return statement  [return]
autogen\backend\extensions\custom_agents.py:65:51: error: Argument 1 to "_get_customer" of "CRMIntegrationAgent" has incompatible type "Any | None"; expected "str"  [arg-type]
autogen\backend\extensions\custom_agents.py:67:50: error: Argument 1 to "_create_lead" of "CRMIntegrationAgent" has incompatible type "Any | None"; expected "dict[str, Any]"  [arg-type]
autogen\backend\extensions\custom_agents.py:69:57: error: Argument 1 to "_update_opportunity" of "CRMIntegrationAgent" has incompatible type "Any | None"; expected "dict[str, Any]"  [arg-type]
autogen\backend\extensions\custom_agents.py:74:34: error: Incompatible types in assignment (expression has type "datetime", variable has type "None")  [assignment]
autogen\backend\extensions\custom_agents.py:145:52: error: Argument 1 to "_get_inventory" of "ERPIntegrationAgent" has incompatible type "Any | None"; expected "str"  [arg-type]
autogen\backend\extensions\custom_agents.py:147:60: error: Argument 1 to "_create_purchase_order" of "ERPIntegrationAgent" has incompatible type "Any | None"; expected "dict[str, Any]"  [arg-type]
autogen\backend\extensions\custom_agents.py:149:59: error: Argument 1 to "_get_financial_report" of "ERPIntegrationAgent" has incompatible type "Any | None"; expected "dict[str, Any]"  [arg-type]
autogen\backend\extensions\custom_agents.py:154:34: error: Incompatible types in assignment (expression has type "datetime", variable has type "None")  [assignment]
autogen\backend\extensions\custom_agents.py:226:57: error: Argument 1 to "_check_data_privacy" of "ComplianceAgent" has incompatible type "Any | None"; expected "dict[str, Any]"  [arg-type]
autogen\backend\extensions\custom_agents.py:228:59: error: Argument 1 to "_check_access_control" of "ComplianceAgent" has incompatible type "Any | None"; expected "dict[str, Any]"  [arg-type]
autogen\backend\extensions\custom_agents.py:230:59: error: Argument 1 to "_generate_audit_trail" of "ComplianceAgent" has incompatible type "Any | None"; expected "dict[str, Any]"  [arg-type]
autogen\backend\extensions\custom_agents.py:235:34: error: Incompatible types in assignment (expression has type "datetime", variable has type "None")  [assignment]
autogen\backend\extensions\custom_agents.py:352:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\custom_agents.py:352:5: note: Use "-> None" if function does not return a value
autogen\backend\extensions\custom_agents.py:356:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\custom_agents.py:356:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\extensions\custom_agents.py:402:25: error: Call to untyped function "CustomAgentRegistry" in typed context  [no-untyped-call]
autogen\backend\extensions\custom_agents.py:423:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\custom_agents.py:423:1: note: Use "-> None" if function does not return a value
autogen\backend\extensions\custom_agents.py:427:63: error: Argument 2 to "register_agent" of "CustomAgentRegistry" has incompatible type "object"; expected "dict[str, Any]"  [arg-type]
autogen\backend\extensions\custom_agents.py:433:1: error: Call to untyped function "initialize_custom_agents" in typed context  [no-untyped-call]
autogen\backend\extensions\audit_compliance.py:57:18: error: Variable "autogen.backend.extensions.audit_compliance.Base" is not valid as a type  [valid-type]
autogen\backend\extensions\audit_compliance.py:57:18: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
autogen\backend\extensions\audit_compliance.py:57:18: error: Invalid base class "Base"  [misc]
autogen\backend\extensions\audit_compliance.py:77:26: error: Variable "autogen.backend.extensions.audit_compliance.Base" is not valid as a type  [valid-type]
autogen\backend\extensions\audit_compliance.py:77:26: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
autogen\backend\extensions\audit_compliance.py:77:26: error: Invalid base class "Base"  [misc]
autogen\backend\extensions\audit_compliance.py:183:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\audit_compliance.py:202:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\audit_compliance.py:222:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\audit_compliance.py:227:24: error: Argument "risk_level" to "AuditEventModel" has incompatible type "str"; expected "Literal['low', 'medium', 'high', 'critical']"  [arg-type]
autogen\backend\extensions\audit_compliance.py:244:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\audit_compliance.py:370:5: error: Missing return statement  [return]
autogen\backend\extensions\audit_compliance.py:432:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\audit_compliance.py:432:5: note: Use "-> None" if function does not return a value
autogen\backend\extensions\audit_compliance.py:464:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\audit_compliance.py:464:5: note: Use "-> None" if function does not return a value
autogen\backend\extensions\audit_compliance.py:468:33: error: Call to untyped function "_periodic_compliance_check" in typed context  [no-untyped-call]
autogen\backend\extensions\audit_compliance.py:469:33: error: Call to untyped function "_data_retention_cleanup" in typed context  [no-untyped-call]
autogen\backend\extensions\audit_compliance.py:475:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\audit_compliance.py:475:5: note: Use "-> None" if function does not return a value
autogen\backend\extensions\audit_compliance.py:497:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\audit_compliance.py:497:5: note: Use "-> None" if function does not return a value
autogen\backend\extensions\audit_compliance.py:503:23: error: Call to untyped function "cleanup_expired_data" in typed context  [no-untyped-call]
autogen\backend\extensions\audit_compliance.py:508:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\audit_compliance.py:520:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\audit_compliance.py:525:15: error: Call to untyped function "initialize" in typed context  [no-untyped-call]
autogen\backend\agents\register_fast_agent.py:22:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\register_fast_agent.py:53:31: error: Call to untyped function "register_fast_agent" in typed context  [no-untyped-call]
autogen\backend\agents\fast_model_agent.py:39:9: error: Need type annotation for "inference_times" (hint: "inference_times: list[<type>] = ...")  [var-annotated]
autogen\backend\agents\fast_model_agent.py:46:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\fast_model_agent.py:46:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\fast_model_agent.py:53:23: error: Call to untyped function "_load_trained_model" in typed context  [no-untyped-call]
autogen\backend\agents\fast_model_agent.py:57:23: error: Call to untyped function "_train_new_model" in typed context  [no-untyped-call]
autogen\backend\agents\fast_model_agent.py:60:13: error: Call to untyped function "_setup_tokenizer" in typed context  [no-untyped-call]
autogen\backend\agents\fast_model_agent.py:69:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\fast_model_agent.py:69:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\fast_model_agent.py:87:13: error: "None" has no attribute "load_state_dict"  [attr-defined]
autogen\backend\agents\fast_model_agent.py:90:22: error: "None" has no attribute "optimize_for_inference"  [attr-defined]
autogen\backend\agents\fast_model_agent.py:94:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\fast_model_agent.py:94:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\fast_model_agent.py:103:19: error: Call to untyped function "_load_trained_model" in typed context  [no-untyped-call]
autogen\backend\agents\fast_model_agent.py:110:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\fast_model_agent.py:110:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\fast_model_agent.py:232:60: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\agents\fast_model_agent.py:235:19: error: Call to untyped function "initialize" in typed context  [no-untyped-call]
autogen\backend\agents\fast_model_agent.py:246:26: error: "None" has no attribute "generate_fast"  [attr-defined]
autogen\backend\agents\fast_model_agent.py:386:11: error: Call to untyped function "initialize" in typed context  [no-untyped-call]
autogen\backend\agents\fast_model_agent.py:391:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\fast_model_agent.py:411:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\agents\fast_model_agent.py:411:5: note: Use "-> None" if function does not return a value
autogen\backend\agents\fast_model_agent.py:437:17: error: Call to untyped function "test_fast_agent" in typed context  [no-untyped-call]
autogen\backend\training\fast_model_trainer.py:120:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\training\fast_model_trainer.py:123:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\training\fast_model_trainer.py:140:13: error: Call to untyped function "_setup_distributed" in typed context  [no-untyped-call]
autogen\backend\training\fast_model_trainer.py:146:24: error: Need type annotation for "metrics"  [var-annotated]
autogen\backend\training\fast_model_trainer.py:158:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\training\fast_model_trainer.py:158:5: note: Use "-> None" if function does not return a value
autogen\backend\training\fast_model_trainer.py:170:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\training\fast_model_trainer.py:187:53: error: Incompatible default for argument "dataset_path" (default has type "None", argument has type "str")  [assignment]
autogen\backend\training\fast_model_trainer.py:187:53: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\training\fast_model_trainer.py:187:53: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\training\fast_model_trainer.py:255:35: error: Call to untyped function "_save_best_model" in typed context  [no-untyped-call]
autogen\backend\training\fast_model_trainer.py:269:15: error: Call to untyped function "_finalize_training" in typed context  [no-untyped-call]
autogen\backend\training\fast_model_trainer.py:279:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\training\fast_model_trainer.py:293:9: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\training\fast_model_trainer.py:293:9: note: Use "-> None" if function does not return a value
autogen\backend\training\fast_model_trainer.py:301:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\training\fast_model_trainer.py:301:5: note: Use "-> None" if function does not return a value
autogen\backend\training\fast_model_trainer.py:319:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\training\fast_model_trainer.py:319:5: note: Use "-> None" if function does not return a value
autogen\backend\training\fast_model_trainer.py:340:19: error: Call to untyped function "_export_onnx" in typed context  [no-untyped-call]
autogen\backend\training\fast_model_trainer.py:346:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\training\fast_model_trainer.py:346:5: note: Use "-> None" if function does not return a value
autogen\backend\training\fast_model_trainer.py:387:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\training\fast_model_trainer.py:444:27: error: Call to untyped function "train_fast_model_for_autogen" in typed context  [no-untyped-call]
autogen\backend\services\vision_processor.py:22: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\vision_processor.py:26: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\vision_processor.py:30: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\vision_processor.py:34: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\vision_processor.py:70:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\vision_processor.py:70:5: note: Use "-> None" if function does not return a value
autogen\backend\services\vision_processor.py:74:9: error: Call to untyped function "_setup_clients" in typed context  [no-untyped-call]
autogen\backend\services\vision_processor.py:91:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\vision_processor.py:91:5: note: Use "-> None" if function does not return a value
autogen\backend\services\vision_processor.py:199:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\vision_processor.py:199:13: note: Left operand is of type "float | int | None"
autogen\backend\services\vision_processor.py:259:13: error: Returning Any from function declared to return "str"  [no-any-return]
autogen\backend\services\vision_processor.py:305:25: error: Item "None" of "Any | None" has no attribute "chat"  [union-attr]
autogen\backend\services\vision_processor.py:347:25: error: Item "None" of "Any | None" has no attribute "messages"  [union-attr]
autogen\backend\services\vision_processor.py:387:31: error: Item "None" of "Any | None" has no attribute "generate_content"  [union-attr]
autogen\backend\services\vision_processor.py:462:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\vision_processor.py:464:9: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\vision_processor.py:464:9: note: Left operand is of type "float | int | None"
autogen\backend\services\vision_processor.py:465:9: error: Unsupported operand types for + ("None" and "float")  [operator]
autogen\backend\services\vision_processor.py:465:9: note: Left operand is of type "float | int | None"
autogen\backend\services\vision_processor.py:466:40: error: Incompatible types in assignment (expression has type "str", target has type "float | int | None")  [assignment]
autogen\backend\services\vision_processor.py:482:9: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\services\vision_processor.py:487:18: error: Call to untyped function "process_single" in typed context  [no-untyped-call]
autogen\backend\services\vision_processor.py:508:42: error: Argument 1 to "append" of "list" has incompatible type "Any | BaseException"; expected "VisionAnalysisResult"  [arg-type]
autogen\backend\services\vision_processor.py:549:21: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\vision_processor.py:551:21: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\services\vision_processor.py:562:13: error: Unsupported operand types for / ("float" and "None")  [operator]
autogen\backend\services\vision_processor.py:562:13: error: Unsupported operand types for / ("int" and "None")  [operator]
autogen\backend\services\vision_processor.py:562:13: error: Unsupported operand types for / ("None" and "float")  [operator]
autogen\backend\services\vision_processor.py:562:13: error: Unsupported operand types for / ("None" and "int")  [operator]
autogen\backend\services\vision_processor.py:562:13: error: Unsupported left operand type for / ("None")  [operator]
autogen\backend\services\vision_processor.py:562:13: note: Both left and right operands are unions
autogen\backend\services\vision_processor.py:563:16: error: Unsupported operand types for < ("int" and "None")  [operator]
autogen\backend\services\vision_processor.py:563:16: note: Left operand is of type "float | int | None"
autogen\backend\services\vision_processor.py:572:17: error: Unsupported operand types for / ("float" and "None")  [operator]
autogen\backend\services\vision_processor.py:572:17: error: Unsupported operand types for / ("int" and "None")  [operator]
autogen\backend\services\vision_processor.py:572:17: error: Unsupported operand types for / ("None" and "float")  [operator]
autogen\backend\services\vision_processor.py:572:17: error: Unsupported operand types for / ("None" and "int")  [operator]
autogen\backend\services\vision_processor.py:572:17: error: Unsupported left operand type for / ("None")  [operator]
autogen\backend\services\vision_processor.py:572:17: note: Both left and right operands are unions
autogen\backend\services\vision_processor.py:573:20: error: Unsupported operand types for < ("int" and "None")  [operator]
autogen\backend\services\vision_processor.py:573:20: note: Left operand is of type "float | int | None"
autogen\backend\services\vision_processor.py:586:20: error: Call to untyped function "VisionProcessor" in typed context  [no-untyped-call]
autogen\backend\services\rag_engine.py:16: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\rag_engine.py:18: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\rag_engine.py:90:9: error: Call to untyped function "_initialize_components" in typed context  [no-untyped-call]
autogen\backend\services\rag_engine.py:104:9: error: Need type annotation for "query_cache" (hint: "query_cache: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\rag_engine.py:107:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\rag_engine.py:107:5: note: Use "-> None" if function does not return a value
autogen\backend\services\rag_engine.py:142:13: error: Call to untyped function "_ensure_collection_exists" in typed context  [no-untyped-call]
autogen\backend\services\rag_engine.py:147:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\rag_engine.py:147:5: note: Use "-> None" if function does not return a value
autogen\backend\services\rag_engine.py:154:13: error: Statement is unreachable  [unreachable]
autogen\backend\services\rag_engine.py:240:39: error: Right operand of "and" is never evaluated  [unreachable]
autogen\backend\services\rag_engine.py:241:17: error: Statement is unreachable  [unreachable]
autogen\backend\services\rag_engine.py:247:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\rag_engine.py:247:13: note: Left operand is of type "float | int | None"
autogen\backend\services\rag_engine.py:248:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\rag_engine.py:248:13: note: Left operand is of type "float | int | None"
autogen\backend\services\rag_engine.py:249:42: error: Incompatible types in assignment (expression has type "str", target has type "float | int | None")  [assignment]
autogen\backend\services\rag_engine.py:257:37: error: Generator has incompatible item type "int"; expected "bool"  [misc]
autogen\backend\services\rag_engine.py:257:41: error: "None" has no attribute "encode"  [attr-defined]
autogen\backend\services\rag_engine.py:326:31: error: "None" has no attribute "encode"  [attr-defined]
autogen\backend\services\rag_engine.py:337:44: error: "None" has no attribute "encode"  [attr-defined]
autogen\backend\services\rag_engine.py:359:40: error: "None" has no attribute "encode"  [attr-defined]
autogen\backend\services\rag_engine.py:388:31: error: "None" has no attribute "encode"  [attr-defined]
autogen\backend\services\rag_engine.py:400:44: error: "None" has no attribute "encode"  [attr-defined]
autogen\backend\services\rag_engine.py:421:40: error: "None" has no attribute "encode"  [attr-defined]
autogen\backend\services\rag_engine.py:441:17: error: Unsupported operand types for + ("SupportsDunderLT[Any]" and "float")  [operator]
autogen\backend\services\rag_engine.py:441:17: error: Unsupported operand types for + ("SupportsDunderGT[Any]" and "float")  [operator]
autogen\backend\services\rag_engine.py:441:17: note: Left operand is of type "SupportsDunderLT[Any] | SupportsDunderGT[Any]"
autogen\backend\services\rag_engine.py:447:13: error: Statement is unreachable  [unreachable]
autogen\backend\services\rag_engine.py:494:13: error: Statement is unreachable  [unreachable]
autogen\backend\services\rag_engine.py:627:13: error: Statement is unreachable  [unreachable]
autogen\backend\services\rag_engine.py:700:17: error: Statement is unreachable  [unreachable]
autogen\backend\services\rag_engine.py:766:13: error: Returning Any from function declared to return "float"  [no-any-return]
autogen\backend\services\rag_engine.py:799:13: error: Statement is unreachable  [unreachable]
autogen\backend\services\model_training_pipeline.py:72:38: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
autogen\backend\services\model_training_pipeline.py:109:38: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
autogen\backend\services\model_training_pipeline.py:128:23: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
autogen\backend\services\model_training_pipeline.py:132:33: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, str]")  [assignment]
autogen\backend\services\model_training_pipeline.py:156:68: error: Incompatible default for argument "targets" (default has type "None", argument has type "ndarray[tuple[Any, ...], dtype[Any]]")  [assignment]
autogen\backend\services\model_training_pipeline.py:156:68: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\model_training_pipeline.py:156:68: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\model_training_pipeline.py:160:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\services\model_training_pipeline.py:163:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\services\model_training_pipeline.py:190:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\services\model_training_pipeline.py:197:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\model_training_pipeline.py:197:5: note: Use "-> None" if function does not return a value
autogen\backend\services\model_training_pipeline.py:216:70: error: Incompatible default for argument "target_column" (default has type "None", argument has type "str")  [assignment]
autogen\backend\services\model_training_pipeline.py:216:70: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\model_training_pipeline.py:216:70: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\model_training_pipeline.py:245:78: error: Incompatible default for argument "target_column" (default has type "None", argument has type "str")  [assignment]
autogen\backend\services\model_training_pipeline.py:245:78: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\model_training_pipeline.py:245:78: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\model_training_pipeline.py:288:16: error: Incompatible return value type (got "tuple[Any, Any | None]", expected "tuple[ndarray[tuple[Any, ...], dtype[Any]], ndarray[tuple[Any, ...], dtype[Any]]]")  [return-value]
autogen\backend\services\model_training_pipeline.py:294:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\model_training_pipeline.py:294:5: note: Use "-> None" if function does not return a value
autogen\backend\services\model_training_pipeline.py:318:59: error: Incompatible default for argument "progress_callback" (default has type "None", argument has type "Callable[[float, str], None]")  [assignment]
autogen\backend\services\model_training_pipeline.py:318:59: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\model_training_pipeline.py:318:59: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\model_training_pipeline.py:323:16: error: Function "progress_callback" could always be true in boolean context  [truthy-function]
autogen\backend\services\model_training_pipeline.py:345:20: error: Function "progress_callback" could always be true in boolean context  [truthy-function]
autogen\backend\services\model_training_pipeline.py:352:20: error: Function "progress_callback" could always be true in boolean context  [truthy-function]
autogen\backend\services\model_training_pipeline.py:366:16: error: Function "progress_callback" could always be true in boolean context  [truthy-function]
autogen\backend\services\model_training_pipeline.py:382:59: error: Incompatible default for argument "progress_callback" (default has type "None", argument has type "Callable[[float, str], None]")  [assignment]
autogen\backend\services\model_training_pipeline.py:382:59: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\model_training_pipeline.py:382:59: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\model_training_pipeline.py:462:16: error: Function "progress_callback" could always be true in boolean context  [truthy-function]
autogen\backend\services\model_training_pipeline.py:529:83: error: Incompatible default for argument "model_name" (default has type "None", argument has type "str")  [assignment]
autogen\backend\services\model_training_pipeline.py:529:83: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\model_training_pipeline.py:529:83: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\model_training_pipeline.py:556:37: error: Argument "performance_metrics" to "ModelArtifact" has incompatible type "TrainingMetrics | None"; expected "TrainingMetrics"  [arg-type]
autogen\backend\services\model_training_pipeline.py:604:42: error: Incompatible default for argument "user_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\services\model_training_pipeline.py:604:42: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\model_training_pipeline.py:604:42: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\model_training_pipeline.py:617:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\model_training_pipeline.py:617:5: note: Use "-> None" if function does not return a value
autogen\backend\services\model_training_pipeline.py:619:31: error: Call to untyped function "DataProcessor" in typed context  [no-untyped-call]
autogen\backend\services\model_training_pipeline.py:620:24: error: Call to untyped function "ModelTrainer" in typed context  [no-untyped-call]
autogen\backend\services\model_training_pipeline.py:623:26: error: Need type annotation for "job_queue"  [var-annotated]
autogen\backend\services\model_training_pipeline.py:627:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\model_training_pipeline.py:627:5: note: Use "-> None" if function does not return a value
autogen\backend\services\model_training_pipeline.py:637:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\model_training_pipeline.py:637:5: note: Use "-> None" if function does not return a value
autogen\backend\services\model_training_pipeline.py:651:30: error: Incompatible default for argument "target_column" (default has type "None", argument has type "str")  [assignment]
autogen\backend\services\model_training_pipeline.py:651:30: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\model_training_pipeline.py:651:30: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\model_training_pipeline.py:698:40: error: Incompatible default for argument "user_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\services\model_training_pipeline.py:698:40: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\model_training_pipeline.py:698:40: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\model_training_pipeline.py:707:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\model_training_pipeline.py:707:5: note: Use "-> None" if function does not return a value
autogen\backend\services\model_training_pipeline.py:727:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\model_training_pipeline.py:736:13: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\model_training_pipeline.py:749:68: error: Argument 2 to "analyze_dataset" of "DataProcessor" has incompatible type "str | None"; expected "str"  [arg-type]
autogen\backend\services\model_training_pipeline.py:756:52: error: Argument 3 to "preprocess_data" of "DataProcessor" has incompatible type "str | None"; expected "str"  [arg-type]
autogen\backend\services\model_training_pipeline.py:766:17: error: Statement is unreachable  [unreachable]
autogen\backend\services\model_training_pipeline.py:835:21: error: Call to untyped function "TrainingPipeline" in typed context  [no-untyped-call]
autogen\backend\services\audio_processor.py:21: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\audio_processor.py:23: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\audio_processor.py:26: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\audio_processor.py:28: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\audio_processor.py:31: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\audio_processor.py:79:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\audio_processor.py:79:5: note: Use "-> None" if function does not return a value
autogen\backend\services\audio_processor.py:81:9: error: Call to untyped function "_setup_clients" in typed context  [no-untyped-call]
autogen\backend\services\audio_processor.py:100:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\audio_processor.py:100:5: note: Use "-> None" if function does not return a value
autogen\backend\services\audio_processor.py:108: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\audio_processor.py:148:13: error: Need type annotation for "speaker_info" (hint: "speaker_info: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\audio_processor.py:192:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\audio_processor.py:192:13: note: Left operand is of type "float | int | None"
autogen\backend\services\audio_processor.py:279:13: error: Returning Any from function declared to return "ndarray[tuple[Any, ...], dtype[Any]]"  [no-any-return]
autogen\backend\services\audio_processor.py:302:33: error: Item "None" of "Any | None" has no attribute "audio"  [union-attr]
autogen\backend\services\audio_processor.py:568:25: error: Item "None" of "Any | None" has no attribute "audio"  [union-attr]
autogen\backend\services\audio_processor.py:576:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\audio_processor.py:576:13: note: Left operand is of type "float | int | None"
autogen\backend\services\audio_processor.py:580:13: error: Returning Any from function declared to return "bytes"  [no-any-return]
autogen\backend\services\audio_processor.py:583:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\audio_processor.py:583:13: note: Left operand is of type "float | int | None"
autogen\backend\services\audio_processor.py:637:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\audio_processor.py:641:9: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\audio_processor.py:641:9: note: Left operand is of type "float | int | None"
autogen\backend\services\audio_processor.py:642:9: error: Unsupported operand types for + ("None" and "float")  [operator]
autogen\backend\services\audio_processor.py:642:9: note: Left operand is of type "float | int | None"
autogen\backend\services\audio_processor.py:643:40: error: Incompatible types in assignment (expression has type "str", target has type "float | int | None")  [assignment]
autogen\backend\services\audio_processor.py:646:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\audio_processor.py:646:13: note: Left operand is of type "float | int | None"
autogen\backend\services\audio_processor.py:648:13: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\audio_processor.py:648:13: note: Left operand is of type "float | int | None"
autogen\backend\services\audio_processor.py:653:13: error: Unsupported operand types for / ("float" and "None")  [operator]
autogen\backend\services\audio_processor.py:653:13: error: Unsupported operand types for / ("int" and "None")  [operator]
autogen\backend\services\audio_processor.py:653:13: error: Unsupported operand types for / ("None" and "float")  [operator]
autogen\backend\services\audio_processor.py:653:13: error: Unsupported operand types for / ("None" and "int")  [operator]
autogen\backend\services\audio_processor.py:653:13: error: Unsupported left operand type for / ("None")  [operator]
autogen\backend\services\audio_processor.py:653:13: note: Both left and right operands are unions
autogen\backend\services\audio_processor.py:654:16: error: Unsupported operand types for < ("int" and "None")  [operator]
autogen\backend\services\audio_processor.py:654:16: note: Left operand is of type "float | int | None"
autogen\backend\services\audio_processor.py:665:17: error: Unsupported operand types for / ("float" and "None")  [operator]
autogen\backend\services\audio_processor.py:665:17: error: Unsupported operand types for / ("int" and "None")  [operator]
autogen\backend\services\audio_processor.py:665:17: error: Unsupported operand types for / ("None" and "float")  [operator]
autogen\backend\services\audio_processor.py:665:17: error: Unsupported operand types for / ("None" and "int")  [operator]
autogen\backend\services\audio_processor.py:665:17: error: Unsupported left operand type for / ("None")  [operator]
autogen\backend\services\audio_processor.py:665:17: note: Both left and right operands are unions
autogen\backend\services\audio_processor.py:666:20: error: Unsupported operand types for < ("int" and "None")  [operator]
autogen\backend\services\audio_processor.py:666:20: note: Left operand is of type "float | int | None"
autogen\backend\services\audio_processor.py:680:19: error: Call to untyped function "AudioProcessor" in typed context  [no-untyped-call]
autogen\backend\services\analytics_engine.py:67:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\analytics_engine.py:67:5: note: Use "-> None" if function does not return a value
autogen\backend\services\analytics_engine.py:68:29: error: Need type annotation for "event_buffer"  [var-annotated]
autogen\backend\services\analytics_engine.py:75:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\analytics_engine.py:79:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\analytics_engine.py:79:5: note: Use "-> None" if function does not return a value
autogen\backend\services\analytics_engine.py:89:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\analytics_engine.py:89:5: note: Use "-> None" if function does not return a value
autogen\backend\services\analytics_engine.py:96:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\analytics_engine.py:96:5: note: Use "-> None" if function does not return a value
autogen\backend\services\analytics_engine.py:101:21: error: Call to untyped function "_analyze_batch" in typed context  [no-untyped-call]
autogen\backend\services\analytics_engine.py:107:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\analytics_engine.py:107:5: note: Use "-> None" if function does not return a value
autogen\backend\services\analytics_engine.py:154:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\services\analytics_engine.py:210:23: error: Need type annotation for "agent_stats"  [var-annotated]
autogen\backend\services\analytics_engine.py:224:13: error: Incompatible types in assignment (expression has type "float | int", target has type "int")  [assignment]
autogen\backend\services\analytics_engine.py:233:46: error: Incompatible types in assignment (expression has type "float", target has type "int")  [assignment]
autogen\backend\services\analytics_engine.py:234:41: error: Incompatible types in assignment (expression has type "float", target has type "int")  [assignment]
autogen\backend\services\analytics_engine.py:235:39: error: Incompatible types in assignment (expression has type "float", target has type "int")  [assignment]
autogen\backend\services\analytics_engine.py:283:9: error: Need type annotation for "hourly_counts"  [var-annotated]
autogen\backend\services\analytics_engine.py:354:9: error: Need type annotation for "timeline_data"  [var-annotated]
autogen\backend\services\analytics_engine.py:360:9: error: Need type annotation for "event_type_data"  [var-annotated]
autogen\backend\services\analytics_engine.py:414:23: error: Need type annotation for "daily_stats"  [var-annotated]
autogen\backend\services\analytics_engine.py:425:44: error: Incompatible types in assignment (expression has type "float", target has type "int")  [assignment]
autogen\backend\services\analytics_engine.py:450:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\analytics_engine.py:450:5: note: Use "-> None" if function does not return a value
autogen\backend\services\analytics_engine.py:451:35: error: Call to untyped function "RealTimeAnalyzer" in typed context  [no-untyped-call]
autogen\backend\services\analytics_engine.py:452:33: error: Call to untyped function "ReportGenerator" in typed context  [no-untyped-call]
autogen\backend\services\analytics_engine.py:453:31: error: Need type annotation for "insights_cache"  [var-annotated]
autogen\backend\services\analytics_engine.py:456:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\analytics_engine.py:456:5: note: Use "-> None" if function does not return a value
autogen\backend\services\analytics_engine.py:462:9: error: Call to untyped function "start_analysis" in typed context  [no-untyped-call]
autogen\backend\services\analytics_engine.py:465:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\analytics_engine.py:465:5: note: Use "-> None" if function does not return a value
autogen\backend\services\analytics_engine.py:468:9: error: Call to untyped function "stop_analysis" in typed context  [no-untyped-call]
autogen\backend\services\analytics_engine.py:471:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\analytics_engine.py:479:36: error: Incompatible default for argument "metadata" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\services\analytics_engine.py:479:36: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\analytics_engine.py:479:36: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\analytics_engine.py:525:20: error: Call to untyped function "AnalyticsEngine" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:45:51: error: Incompatible default for argument "config" (default has type "None", argument has type "MonitoringConfig")  [assignment]
autogen\backend\services\system_monitor.py:45:51: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\system_monitor.py:45:51: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\system_monitor.py:48:23: error: Need type annotation for "alerts"  [var-annotated]
autogen\backend\services\system_monitor.py:49:9: error: Need type annotation for "metrics_history" (hint: "metrics_history: list[<type>] = ...")  [var-annotated]
autogen\backend\services\system_monitor.py:54:9: error: Call to untyped function "_init_database" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:57:9: error: Need type annotation for "request_counts" (hint: "request_counts: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\system_monitor.py:58:9: error: Need type annotation for "response_times" (hint: "response_times: list[<type>] = ...")  [var-annotated]
autogen\backend\services\system_monitor.py:59:9: error: Need type annotation for "error_counts" (hint: "error_counts: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\system_monitor.py:62:9: error: Need type annotation for "healing_in_progress" (hint: "healing_in_progress: set[<type>] = ...")  [var-annotated]
autogen\backend\services\system_monitor.py:63:9: error: Need type annotation for "last_alert_times" (hint: "last_alert_times: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\system_monitor.py:65:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:65:5: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:117:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:117:5: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:128:13: error: Call to untyped function "_monitor_system_resources" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:129:13: error: Call to untyped function "_monitor_application_performance" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:130:13: error: Call to untyped function "_monitor_network_health" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:131:13: error: Call to untyped function "_monitor_database_performance" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:132:13: error: Call to untyped function "_alert_processor" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:133:13: error: Call to untyped function "_auto_healer" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:134:13: error: Call to untyped function "_cleanup_old_data" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:139:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:139:5: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:180:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:180:5: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:204:23: error: "SystemMonitor" has no attribute "_check_performance_issues"  [attr-defined]
autogen\backend\services\system_monitor.py:212:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:212:5: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:257:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:257:5: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:264:36: error: "SystemMonitor" has no attribute "_check_database_health"; maybe "_check_fastapi_health"?  [attr-defined]
autogen\backend\services\system_monitor.py:281:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:281:5: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:309:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:309:5: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:321:31: error: Call to untyped function "_heal_high_cpu_usage" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:326:31: error: Call to untyped function "_heal_high_memory_usage" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:329:41: error: "SystemMonitor" has no attribute "_detect_failed_services"  [attr-defined]
autogen\backend\services\system_monitor.py:332:31: error: "SystemMonitor" has no attribute "_restart_service"  [attr-defined]
autogen\backend\services\system_monitor.py:340:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:340:5: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:371:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:457:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:469:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:487:27: error: "SystemMonitor" has no attribute "_handle_critical_alert"  [attr-defined]
autogen\backend\services\system_monitor.py:494:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:494:5: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:515:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:515:5: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:536:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:558:9: error: Returning Any from function declared to return "float"  [no-any-return]
autogen\backend\services\system_monitor.py:565:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:615:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:615:1: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:631:25: error: Call to untyped function "start_monitoring" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:643:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\system_monitor.py:643:5: note: Use "-> None" if function does not return a value
autogen\backend\services\system_monitor.py:644:15: error: Call to untyped function "initialize_system_monitor" in typed context  [no-untyped-call]
autogen\backend\services\system_monitor.py:652:17: error: Call to untyped function "test_monitor" in typed context  [no-untyped-call]
autogen\backend\services\internet_updater.py:41:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\internet_updater.py:41:5: note: Use "-> None" if function does not return a value
autogen\backend\services\internet_updater.py:90:9: error: Call to untyped function "_init_database" in typed context  [no-untyped-call]
autogen\backend\services\internet_updater.py:92:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\internet_updater.py:92:5: note: Use "-> None" if function does not return a value
autogen\backend\services\internet_updater.py:154:5: error: Missing return statement  [return]
autogen\backend\services\internet_updater.py:241:23: error: Argument "title" to "NewsItem" has incompatible type "Sequence[str]"; expected "str"  [arg-type]
autogen\backend\services\internet_updater.py:242:25: error: Argument "content" to "NewsItem" has incompatible type "Sequence[str]"; expected "str"  [arg-type]
autogen\backend\services\internet_updater.py:243:61: error: "Sequence[str]" has no attribute "encode"  [attr-defined]
autogen\backend\services\internet_updater.py:246:26: error: Argument "category" to "NewsItem" has incompatible type "Sequence[str]"; expected "str"  [arg-type]
autogen\backend\services\internet_updater.py:247:26: error: Argument "keywords" to "NewsItem" has incompatible type "Sequence[str]"; expected "list[str]"  [arg-type]
autogen\backend\services\internet_updater.py:273:49: error: Missing type parameters for generic type "tuple"  [type-arg]
autogen\backend\services\internet_updater.py:301:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\internet_updater.py:362:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\internet_updater.py:403:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\internet_updater.py:438:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\internet_updater.py:444:23: error: Call to untyped function "update_all_agents" in typed context  [no-untyped-call]
autogen\backend\services\internet_updater.py:452:20: error: Call to untyped function "InternetInformationUpdater" in typed context  [no-untyped-call]
autogen\backend\services\internet_updater.py:455:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\internet_updater.py:455:1: note: Use "-> None" if function does not return a value
autogen\backend\services\internet_updater.py:460:11: error: Call to untyped function "update_all_agents" in typed context  [no-untyped-call]
autogen\backend\services\internet_updater.py:474:15: error: Call to untyped function "update_all_agents" in typed context  [no-untyped-call]
autogen\backend\services\internet_updater.py:482:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\internet_updater.py:482:5: note: Use "-> None" if function does not return a value
autogen\backend\services\internet_updater.py:483:19: error: Call to untyped function "InternetInformationUpdater" in typed context  [no-untyped-call]
autogen\backend\services\internet_updater.py:484:25: error: Call to untyped function "update_all_agents" in typed context  [no-untyped-call]
autogen\backend\services\internet_updater.py:491:17: error: Call to untyped function "test_updater" in typed context  [no-untyped-call]
autogen\backend\services\integration_hub.py:137:25: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
autogen\backend\services\integration_hub.py:144:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:144:5: note: Use "-> None" if function does not return a value
autogen\backend\services\integration_hub.py:149:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:153: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\integration_hub.py:164:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:168: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\integration_hub.py:176:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:180: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\integration_hub.py:253:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:253:5: note: Use "-> None" if function does not return a value
autogen\backend\services\integration_hub.py:287:55: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\integration_hub.py:287:62: error: Incompatible default for argument "params" (default has type "None", argument has type "dict[Any, Any]")  [assignment]
autogen\backend\services\integration_hub.py:287:62: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\integration_hub.py:287:62: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\integration_hub.py:288:15: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\integration_hub.py:319:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:319:5: note: Use "-> None" if function does not return a value
autogen\backend\services\integration_hub.py:323:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:323:5: note: Use "-> None" if function does not return a value
autogen\backend\services\integration_hub.py:328:5: error: Missing return statement  [return]
autogen\backend\services\integration_hub.py:362:55: error: Argument 1 to "request" of "ClientSession" has incompatible type "**dict[str, object]"; expected "str"  [arg-type]
autogen\backend\services\integration_hub.py:362:55: error: Argument 1 to "request" of "ClientSession" has incompatible type "**dict[str, object]"; expected "str | URL"  [arg-type]
autogen\backend\services\integration_hub.py:387:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:406:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:431:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:431:5: note: Use "-> None" if function does not return a value
autogen\backend\services\integration_hub.py:434:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:455:37: error: Call to untyped function "_xml_to_dict" in typed context  [no-untyped-call]
autogen\backend\services\integration_hub.py:526:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:528:9: error: Need type annotation for "result" (hint: "result: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\integration_hub.py:530:26: error: Call to untyped function "_xml_to_dict" in typed context  [no-untyped-call]
autogen\backend\services\integration_hub.py:546:34: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\integration_hub.py:552:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:552:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\services\integration_hub.py:596:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:612:79: error: Argument 1 to "eval" has incompatible type "Any | None"; expected "str | Buffer | CodeType"  [arg-type]
autogen\backend\services\integration_hub.py:616:40: error: "None" object is not iterable  [misc]
autogen\backend\services\integration_hub.py:624:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:624:5: note: Use "-> None" if function does not return a value
autogen\backend\services\integration_hub.py:626:30: error: Need type annotation for "webhook_queue"  [var-annotated]
autogen\backend\services\integration_hub.py:629:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:629:82: error: Incompatible default for argument "secret" (default has type "None", argument has type "str")  [assignment]
autogen\backend\services\integration_hub.py:629:82: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\integration_hub.py:629:82: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\integration_hub.py:637:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:674:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:674:5: note: Use "-> None" if function does not return a value
autogen\backend\services\integration_hub.py:676:31: error: Call to untyped function "APIIntegrator" in typed context  [no-untyped-call]
autogen\backend\services\integration_hub.py:677:30: error: Call to untyped function "CloudStorageIntegrator" in typed context  [no-untyped-call]
autogen\backend\services\integration_hub.py:678:25: error: Call to untyped function "DatabaseIntegrator" in typed context  [no-untyped-call]
autogen\backend\services\integration_hub.py:679:28: error: Call to untyped function "DataTransformer" in typed context  [no-untyped-call]
autogen\backend\services\integration_hub.py:680:32: error: Call to untyped function "WebhookHandler" in typed context  [no-untyped-call]
autogen\backend\services\integration_hub.py:681:26: error: Need type annotation for "job_queue"  [var-annotated]
autogen\backend\services\integration_hub.py:686:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:686:5: note: Use "-> None" if function does not return a value
autogen\backend\services\integration_hub.py:696:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:696:5: note: Use "-> None" if function does not return a value
autogen\backend\services\integration_hub.py:701:15: error: Call to untyped function "close" in typed context  [no-untyped-call]
autogen\backend\services\integration_hub.py:770:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:770:5: note: Use "-> None" if function does not return a value
autogen\backend\services\integration_hub.py:785:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:817:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:829:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:850:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:871:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\integration_hub.py:906:61: error: Incompatible default for argument "status" (default has type "None", argument has type "IntegrationStatus")  [assignment]
autogen\backend\services\integration_hub.py:906:61: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\integration_hub.py:906:61: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\integration_hub.py:917:19: error: Call to untyped function "IntegrationHub" in typed context  [no-untyped-call]
autogen\backend\services\continuous_updater.py:49:47: error: Incompatible default for argument "config" (default has type "None", argument has type "UpdateConfig")  [assignment]
autogen\backend\services\continuous_updater.py:49:47: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\continuous_updater.py:49:47: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\continuous_updater.py:52:9: error: Need type annotation for "update_tasks" (hint: "update_tasks: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\continuous_updater.py:53:9: error: Need type annotation for "performance_metrics" (hint: "performance_metrics: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\continuous_updater.py:58:9: error: Call to untyped function "_init_database" in typed context  [no-untyped-call]
autogen\backend\services\continuous_updater.py:75:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:75:5: note: Use "-> None" if function does not return a value
autogen\backend\services\continuous_updater.py:119:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:119:5: note: Use "-> None" if function does not return a value
autogen\backend\services\continuous_updater.py:130:13: error: Call to untyped function "_start_model_updates" in typed context  [no-untyped-call]
autogen\backend\services\continuous_updater.py:131:13: error: Call to untyped function "_start_internet_updates" in typed context  [no-untyped-call]
autogen\backend\services\continuous_updater.py:132:13: error: Call to untyped function "_start_agent_updates" in typed context  [no-untyped-call]
autogen\backend\services\continuous_updater.py:133:13: error: Call to untyped function "_start_performance_monitoring" in typed context  [no-untyped-call]
autogen\backend\services\continuous_updater.py:134:13: error: Call to untyped function "_start_system_health_monitoring" in typed context  [no-untyped-call]
autogen\backend\services\continuous_updater.py:140:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:140:5: note: Use "-> None" if function does not return a value
autogen\backend\services\continuous_updater.py:160:25: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\continuous_updater.py:160:25: note: Left operand is of type "int | None"
autogen\backend\services\continuous_updater.py:161:59: error: Incompatible types in assignment (expression has type "str", target has type "int | None")  [assignment]
autogen\backend\services\continuous_updater.py:190:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:190:5: note: Use "-> None" if function does not return a value
autogen\backend\services\continuous_updater.py:207:17: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\continuous_updater.py:207:17: note: Left operand is of type "int | None"
autogen\backend\services\continuous_updater.py:208:54: error: Incompatible types in assignment (expression has type "str", target has type "int | None")  [assignment]
autogen\backend\services\continuous_updater.py:230:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:230:5: note: Use "-> None" if function does not return a value
autogen\backend\services\continuous_updater.py:251:17: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\continuous_updater.py:251:17: note: Left operand is of type "int | None"
autogen\backend\services\continuous_updater.py:252:51: error: Incompatible types in assignment (expression has type "str", target has type "int | None")  [assignment]
autogen\backend\services\continuous_updater.py:272:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:272:5: note: Use "-> None" if function does not return a value
autogen\backend\services\continuous_updater.py:294:17: error: Unsupported operand types for + ("None" and "int")  [operator]
autogen\backend\services\continuous_updater.py:294:17: note: Left operand is of type "int | None"
autogen\backend\services\continuous_updater.py:302:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:302:5: note: Use "-> None" if function does not return a value
autogen\backend\services\continuous_updater.py:335:59: error: Argument 1 to "fromisoformat" of "date" has incompatible type "int"; expected "str"  [arg-type]
autogen\backend\services\continuous_updater.py:510:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:532:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:560:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:560:5: note: Use "-> None" if function does not return a value
autogen\backend\services\continuous_updater.py:581:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:620:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:655:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:666:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:666:1: note: Use "-> None" if function does not return a value
autogen\backend\services\continuous_updater.py:681:25: error: Call to untyped function "start_continuous_updates" in typed context  [no-untyped-call]
autogen\backend\services\continuous_updater.py:693:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\continuous_updater.py:693:5: note: Use "-> None" if function does not return a value
autogen\backend\services\continuous_updater.py:694:15: error: Call to untyped function "initialize_continuous_updater" in typed context  [no-untyped-call]
autogen\backend\services\continuous_updater.py:702:17: error: Call to untyped function "test_updater" in typed context  [no-untyped-call]
autogen\backend\integrations\advanced_model_integrations.py:19:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\integrations\advanced_model_integrations.py:20:24: error: Incompatible types in assignment (expression has type "ClientSession", variable has type "None")  [assignment]
autogen\backend\integrations\advanced_model_integrations.py:23:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\integrations\advanced_model_integrations.py:25:13: error: Statement is unreachable  [unreachable]
autogen\backend\integrations\advanced_model_integrations.py:28:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\integrations\advanced_model_integrations.py:42:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\integrations\advanced_model_integrations.py:55:20: error: "None" has no attribute "post"  [attr-defined]
autogen\backend\integrations\advanced_model_integrations.py:69:24: error: "None" has no attribute "post"  [attr-defined]
autogen\backend\integrations\advanced_model_integrations.py:84:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\integrations\advanced_model_integrations.py:96:20: error: "None" has no attribute "post"  [attr-defined]
autogen\backend\integrations\advanced_model_integrations.py:98:13: error: Returning Any from function declared to return "str"  [no-any-return]
autogen\backend\integrations\advanced_model_integrations.py:107:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\integrations\advanced_model_integrations.py:117:20: error: "None" has no attribute "post"  [attr-defined]
autogen\backend\integrations\advanced_model_integrations.py:121:13: error: Returning Any from function declared to return "str"  [no-any-return]
autogen\backend\integrations\advanced_model_integrations.py:129:20: error: "None" has no attribute "post"  [attr-defined]
autogen\backend\integrations\advanced_model_integrations.py:133:13: error: Returning Any from function declared to return "list[list[float]]"  [no-any-return]
autogen\backend\integrations\advanced_model_integrations.py:139:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\integrations\advanced_model_integrations.py:139:5: note: Use "-> None" if function does not return a value
autogen\backend\integrations\advanced_model_integrations.py:142:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\integrations\advanced_model_integrations.py:160:17: error: Returning Any from function declared to return "BaseModelProvider | None"  [no-any-return]
autogen\backend\integrations\advanced_model_integrations.py:164:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\integrations\advanced_model_integrations.py:173:25: error: Returning Any from function declared to return "str"  [no-any-return]
autogen\backend\integrations\advanced_model_integrations.py:175:17: error: Name "logger" is not defined  [name-defined]
autogen\backend\security_audit.py:100:15: error: Call to untyped function "_reconnaissance_phase" in typed context  [no-untyped-call]
autogen\backend\security_audit.py:103:15: error: Call to untyped function "_authentication_testing_phase" in typed context  [no-untyped-call]
autogen\backend\security_audit.py:106:15: error: Call to untyped function "_input_validation_phase" in typed context  [no-untyped-call]
autogen\backend\security_audit.py:109:15: error: Call to untyped function "_session_management_phase" in typed context  [no-untyped-call]
autogen\backend\security_audit.py:112:15: error: Call to untyped function "_api_security_phase" in typed context  [no-untyped-call]
autogen\backend\security_audit.py:115:15: error: Call to untyped function "_business_logic_phase" in typed context  [no-untyped-call]
autogen\backend\security_audit.py:118:15: error: Call to untyped function "_configuration_phase" in typed context  [no-untyped-call]
autogen\backend\security_audit.py:121:15: error: Call to untyped function "_information_disclosure_phase" in typed context  [no-untyped-call]
autogen\backend\security_audit.py:127:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security_audit.py:127:5: note: Use "-> None" if function does not return a value
autogen\backend\security_audit.py:142:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security_audit.py:142:5: note: Use "-> None" if function does not return a value
autogen\backend\security_audit.py:160:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security_audit.py:160:5: note: Use "-> None" if function does not return a value
autogen\backend\security_audit.py:178:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security_audit.py:178:5: note: Use "-> None" if function does not return a value
autogen\backend\security_audit.py:193:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security_audit.py:193:5: note: Use "-> None" if function does not return a value
autogen\backend\security_audit.py:210:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security_audit.py:210:5: note: Use "-> None" if function does not return a value
autogen\backend\security_audit.py:225:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security_audit.py:225:5: note: Use "-> None" if function does not return a value
autogen\backend\security_audit.py:240:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security_audit.py:240:5: note: Use "-> None" if function does not return a value
autogen\backend\security_audit.py:254:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security_audit.py:254:44: error: Missing type parameters for generic type "list"  [type-arg]
autogen\backend\security_audit.py:302:9: error: Need type annotation for "vulnerabilities" (hint: "vulnerabilities: list[<type>] = ...")  [var-annotated]
autogen\backend\security_audit.py:424:35: error: Module has no attribute "decode"  [attr-defined]
autogen\backend\security_audit.py:455:9: error: Need type annotation for "vulnerabilities" (hint: "vulnerabilities: list[<type>] = ...")  [var-annotated]
autogen\backend\security_audit.py:501:9: error: Need type annotation for "vulnerabilities" (hint: "vulnerabilities: list[<type>] = ...")  [var-annotated]
autogen\backend\security_audit.py:914:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security_audit.py:931:27: error: Call to untyped function "main" in typed context  [no-untyped-call]
autogen\backend\services\testing_framework.py:19:14: error: Incompatible types in assignment (expression has type "None", variable has type Module)  [assignment]
autogen\backend\services\testing_framework.py:56:32: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
autogen\backend\services\testing_framework.py:58:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\testing_framework.py:77:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\testing_framework.py:79:28: error: Call to untyped function "to_dict" in typed context  [no-untyped-call]
autogen\backend\services\testing_framework.py:88:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\testing_framework.py:88:5: note: Use "-> None" if function does not return a value
autogen\backend\services\testing_framework.py:105:9: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\testing_framework.py:185:15: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\testing_framework.py:186:18: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\testing_framework.py:286:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\testing_framework.py:286:5: note: Use "-> None" if function does not return a value
autogen\backend\services\testing_framework.py:410:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\testing_framework.py:410:5: note: Use "-> None" if function does not return a value
autogen\backend\services\testing_framework.py:411:38: error: Call to untyped function "PerformanceValidator" in typed context  [no-untyped-call]
autogen\backend\services\testing_framework.py:412:35: error: Call to untyped function "SecurityValidator" in typed context  [no-untyped-call]
autogen\backend\services\testing_framework.py:416:87: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\testing_framework.py:442:43: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\testing_framework.py:478:81: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\testing_framework.py:517:78: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\testing_framework.py:548:74: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\testing_framework.py:565:33: error: Incompatible types in assignment (expression has type "None", variable has type "str")  [assignment]
autogen\backend\services\testing_framework.py:586:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\testing_framework.py:607:34: error: Argument "test_configs" to "create_test_suite" of "TestingFramework" has incompatible type "list[object]"; expected "list[dict[Any, Any]]"  [arg-type]
autogen\backend\services\testing_framework.py:663:29: error: Call to untyped function "to_dict" in typed context  [no-untyped-call]
autogen\backend\services\testing_framework.py:722:21: error: Call to untyped function "TestingFramework" in typed context  [no-untyped-call]
autogen\backend\security\auth_manager.py:223:9: error: Returning Any from function declared to return "str"  [no-any-return]
autogen\backend\security\auth_manager.py:227:9: error: Returning Any from function declared to return "bool"  [no-any-return]
autogen\backend\security\auth_manager.py:241:9: error: Returning Any from function declared to return "str"  [no-any-return]
autogen\backend\security\auth_manager.py:241:16: error: Module has no attribute "encode"  [attr-defined]
autogen\backend\security\auth_manager.py:249:23: error: Module has no attribute "decode"  [attr-defined]
autogen\backend\security\auth_manager.py:250:13: error: Returning Any from function declared to return "dict[str, Any] | None"  [no-any-return]
autogen\backend\security\auth_manager.py:251:16: error: Module has no attribute "ExpiredSignatureError"  [attr-defined]
autogen\backend\security\auth_manager.py:254:16: error: Module has no attribute "JWTError"  [attr-defined]
autogen\backend\security\auth_manager.py:373:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\auth_manager.py:376:9: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\security\auth_manager.py:378:13: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\security\auth_manager.py:430:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\auth_manager.py:469:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\auth_manager.py:469:5: note: Use "-> None" if function does not return a value
autogen\backend\production_optimizations.py:28:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:28:5: note: Use "-> None" if function does not return a value
autogen\backend\production_optimizations.py:47:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:50:19: error: Call to untyped function "initialize" in typed context  [no-untyped-call]
autogen\backend\production_optimizations.py:52:20: error: Item "None" of "Any | None" has no attribute "acquire"  [union-attr]
autogen\backend\production_optimizations.py:55:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:55:5: note: Use "-> None" if function does not return a value
autogen\backend\production_optimizations.py:70:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:70:5: note: Use "-> None" if function does not return a value
autogen\backend\production_optimizations.py:73:26: error: Call to untyped function "from_url" in typed context  [no-untyped-call]
autogen\backend\production_optimizations.py:94:58: error: Incompatible default for argument "ttl" (default has type "None", argument has type "int")  [assignment]
autogen\backend\production_optimizations.py:94:58: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\production_optimizations.py:94:58: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\production_optimizations.py:127:17: error: Returning Any from function declared to return "int"  [no-any-return]
autogen\backend\production_optimizations.py:137:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:137:5: note: Use "-> None" if function does not return a value
autogen\backend\production_optimizations.py:138:39: error: Missing type parameters for generic type "list"  [type-arg]
autogen\backend\production_optimizations.py:143:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:146:9: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:148:13: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:177:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:187:13: error: Call to untyped function "_cleanup_old_data" in typed context  [no-untyped-call]
autogen\backend\production_optimizations.py:190:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:190:5: note: Use "-> None" if function does not return a value
autogen\backend\production_optimizations.py:221:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:224:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:226:9: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:256:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:256:5: note: Use "-> None" if function does not return a value
autogen\backend\production_optimizations.py:261:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:261:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\production_optimizations.py:326:25: error: Call to untyped function "PerformanceOptimizer" in typed context  [no-untyped-call]
autogen\backend\production_optimizations.py:327:18: error: Call to untyped function "HealthChecker" in typed context  [no-untyped-call]
autogen\backend\production_optimizations.py:330:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:330:1: note: Use "-> None" if function does not return a value
autogen\backend\production_optimizations.py:336:15: error: Call to untyped function "initialize" in typed context  [no-untyped-call]
autogen\backend\production_optimizations.py:339:15: error: Call to untyped function "initialize" in typed context  [no-untyped-call]
autogen\backend\production_optimizations.py:380:9: error: Returning Any from function declared to return "bool"  [no-any-return]
autogen\backend\production_optimizations.py:385:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:385:1: note: Use "-> None" if function does not return a value
autogen\backend\production_optimizations.py:390:15: error: Call to untyped function "close" in typed context  [no-untyped-call]
autogen\backend\production_optimizations.py:405:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:408:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\production_optimizations.py:415:9: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\main_working.py:32:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:138:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:149:32: error: Call to untyped function "check_ollama_health" in typed context  [no-untyped-call]
autogen\backend\main_working.py:157:39: error: Call to untyped function "get_available_models" in typed context  [no-untyped-call]
autogen\backend\main_working.py:165:19: error: Call to untyped function "auto_recover_ollama" in typed context  [no-untyped-call]
autogen\backend\main_working.py:180:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:203:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:216:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:227:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:245:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:267:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:279:29: error: Call to untyped function "get_available_models" in typed context  [no-untyped-call]
autogen\backend\main_working.py:296:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:891:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:897:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:908:2: error: Name "get_system_stats" already defined on line 266  [no-redef]
autogen\backend\main_working.py:909:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:929:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:943:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:943:5: note: Use "-> None" if function does not return a value
autogen\backend\main_working.py:950:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:964:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:976:26: error: Call to untyped function (unknown) in typed context  [no-untyped-call]
autogen\backend\main_working.py:987:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:996:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1008:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1011:22: error: Call to untyped function "check_ollama_health" in typed context  [no-untyped-call]
autogen\backend\main_working.py:1013:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1015:22: error: Call to untyped function "check_ollama_health" in typed context  [no-untyped-call]
autogen\backend\main_working.py:1019:18: error: Call to untyped function "SystemHealth" in typed context  [no-untyped-call]
autogen\backend\main_working.py:1024:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1024:5: note: Use "-> None" if function does not return a value
autogen\backend\main_working.py:1039:21: error: Returning Any from function declared to return "list[dict[str, Any]]"  [no-any-return]
autogen\backend\main_working.py:1083:21: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\main_working.py:1302:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1318:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1321:31: error: Need type annotation for "response_times"  [var-annotated]
autogen\backend\main_working.py:1327:37: error: Need type annotation for "conversation_lengths"  [var-annotated]
autogen\backend\main_working.py:1328:31: error: Need type annotation for "search_queries"  [var-annotated]
autogen\backend\main_working.py:1330:29: error: Need type annotation for "hourly_stats"  [var-annotated]
autogen\backend\main_working.py:1334:9: error: Call to untyped function "init_metrics_db" in typed context  [no-untyped-call]
autogen\backend\main_working.py:1336:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1336:5: note: Use "-> None" if function does not return a value
autogen\backend\main_working.py:1392:25: error: Incompatible types in assignment (expression has type "None", variable has type "Connection")  [assignment]
autogen\backend\main_working.py:1394:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1394:60: error: Incompatible default for argument "user_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\main_working.py:1394:60: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_working.py:1394:60: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_working.py:1394:84: error: Incompatible default for argument "session_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\main_working.py:1411:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1411:89: error: Incompatible default for argument "agent_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\main_working.py:1411:89: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_working.py:1411:89: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_working.py:1419:13: error: Incompatible types in assignment (expression has type "float", target has type "int")  [assignment]
autogen\backend\main_working.py:1437:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1437:89: error: Incompatible default for argument "user_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\main_working.py:1437:89: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_working.py:1437:89: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_working.py:1465:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1465:86: error: Incompatible default for argument "user_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\main_working.py:1465:86: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_working.py:1465:86: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_working.py:1478:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1478:61: error: Incompatible default for argument "endpoint" (default has type "None", argument has type "str")  [assignment]
autogen\backend\main_working.py:1478:61: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_working.py:1478:61: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_working.py:1487:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1589:60: error: Argument "key" to "sorted" has incompatible type "Callable[[dict[str, object]], object]"; expected "Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]"  [arg-type]
autogen\backend\main_working.py:1589:70: error: Incompatible return value type (got "object", expected "SupportsDunderLT[Any] | SupportsDunderGT[Any]")  [return-value]
autogen\backend\main_working.py:1624:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1625:31: error: Need type annotation for "request_counts"  [var-annotated]
autogen\backend\main_working.py:1644:39: error: Incompatible types in assignment (expression has type "dict[Any, int]", target has type "defaultdict[Any, int]")  [assignment]
autogen\backend\main_working.py:1674:18: error: Call to untyped function "SystemHealth" in typed context  [no-untyped-call]
autogen\backend\main_working.py:1675:25: error: Call to untyped function "InternetCapabilities" in typed context  [no-untyped-call]
autogen\backend\main_working.py:1676:21: error: Call to untyped function "MetricsCollector" in typed context  [no-untyped-call]
autogen\backend\main_working.py:1677:20: error: Call to untyped function "SecurityManager" in typed context  [no-untyped-call]
autogen\backend\main_working.py:1684:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1684:5: note: Use "-> None" if function does not return a value
autogen\backend\main_working.py:1688:32: error: Need type annotation for "agent_knowledge"  [var-annotated]
autogen\backend\main_working.py:1691:33: error: Need type annotation for "user_preferences"  [var-annotated]
autogen\backend\main_working.py:1693:9: error: Call to untyped function "init_redis_connection" in typed context  [no-untyped-call]
autogen\backend\main_working.py:1695:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1695:5: note: Use "-> None" if function does not return a value
autogen\backend\main_working.py:1714:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\main_working.py:1717:9: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\main_working.py:1719:13: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\main_working.py:1757:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1762:35: error: Incompatible default for argument "context" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\main_working.py:1762:35: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_working.py:1762:35: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_working.py:1808:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1813:33: error: Incompatible default for argument "feedback_score" (default has type "None", argument has type "float")  [assignment]
autogen\backend\main_working.py:1813:33: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_working.py:1813:33: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_working.py:1814:35: error: Incompatible default for argument "context" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\main_working.py:1814:35: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_working.py:1814:35: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_working.py:1833:28: error: "object" has no attribute "__iter__"; maybe "__dir__" or "__str__"? (not iterable)  [attr-defined]
autogen\backend\main_working.py:1903:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1939:25: error: Returning Any from function declared to return "list[dict[str, Any]] | None"  [no-any-return]
autogen\backend\main_working.py:1949:21: error: Returning Any from function declared to return "list[dict[str, Any]] | None"  [no-any-return]
autogen\backend\main_working.py:1970:25: error: Unsupported operand types for + ("object" and "int")  [operator]
autogen\backend\main_working.py:1977:29: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\main_working.py:1986:16: error: Unsupported operand types for < ("int" and "object")  [operator]
autogen\backend\main_working.py:1988:62: error: "object" has no attribute "__iter__"; maybe "__dir__" or "__str__"? (not iterable)  [attr-defined]
autogen\backend\main_working.py:1995:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:1995:5: note: Use "-> None" if function does not return a value
autogen\backend\main_working.py:2050:17: error: Call to untyped function "AdvancedMemorySystem" in typed context  [no-untyped-call]
autogen\backend\main_working.py:2149:47: error: Invalid index type "slice[None, int, None]" for "dict[str, Any]"; expected type "str"  [index]
autogen\backend\main_working.py:2188:23: error: Call to untyped function "check_ollama_health" in typed context  [no-untyped-call]
autogen\backend\main_working.py:2190:27: error: Call to untyped function "auto_recover_ollama" in typed context  [no-untyped-call]
autogen\backend\main_working.py:2275:17: error: Returning Any from function declared to return "str"  [no-any-return]
autogen\backend\main_working.py:2465:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:2471:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:2477:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:2520:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:2529:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:2536:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:2573:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:2665:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:2774:23: error: Incompatible types in assignment (expression has type "str | BaseException", variable has type "str")  [assignment]
autogen\backend\main_working.py:2919:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:2956:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_working.py:2961:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:2991:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:3020:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:3078:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:3096:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_working.py:3101:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:3125:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_working.py:3130:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:3143:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_working.py:3148:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:3164:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_working.py:3169:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:3192:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_working.py:3197:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:3213:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_working.py:3218:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:3240:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_working.py:3245:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:3253:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_working.py:3258:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_working.py:3290:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_simple.py:32:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:138:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:149:32: error: Call to untyped function "check_ollama_health" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:157:39: error: Call to untyped function "get_available_models" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:165:19: error: Call to untyped function "auto_recover_ollama" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:180:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:203:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:216:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:227:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:245:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:267:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:279:29: error: Call to untyped function "get_available_models" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:296:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:891:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:897:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:908:2: error: Name "get_system_stats" already defined on line 266  [no-redef]
autogen\backend\main_simple.py:909:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:929:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:943:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:943:5: note: Use "-> None" if function does not return a value
autogen\backend\main_simple.py:950:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:964:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:976:26: error: Call to untyped function (unknown) in typed context  [no-untyped-call]
autogen\backend\main_simple.py:987:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:996:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1008:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1011:22: error: Call to untyped function "check_ollama_health" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:1013:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1015:22: error: Call to untyped function "check_ollama_health" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:1019:18: error: Call to untyped function "SystemHealth" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:1024:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1024:5: note: Use "-> None" if function does not return a value
autogen\backend\main_simple.py:1039:21: error: Returning Any from function declared to return "list[dict[str, Any]]"  [no-any-return]
autogen\backend\main_simple.py:1083:21: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\main_simple.py:1302:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1318:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1321:31: error: Need type annotation for "response_times"  [var-annotated]
autogen\backend\main_simple.py:1327:37: error: Need type annotation for "conversation_lengths"  [var-annotated]
autogen\backend\main_simple.py:1328:31: error: Need type annotation for "search_queries"  [var-annotated]
autogen\backend\main_simple.py:1330:29: error: Need type annotation for "hourly_stats"  [var-annotated]
autogen\backend\main_simple.py:1334:9: error: Call to untyped function "init_metrics_db" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:1336:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1336:5: note: Use "-> None" if function does not return a value
autogen\backend\main_simple.py:1392:25: error: Incompatible types in assignment (expression has type "None", variable has type "Connection")  [assignment]
autogen\backend\main_simple.py:1394:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1394:60: error: Incompatible default for argument "user_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\main_simple.py:1394:60: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_simple.py:1394:60: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_simple.py:1394:84: error: Incompatible default for argument "session_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\main_simple.py:1411:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1411:89: error: Incompatible default for argument "agent_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\main_simple.py:1411:89: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_simple.py:1411:89: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_simple.py:1419:13: error: Incompatible types in assignment (expression has type "float", target has type "int")  [assignment]
autogen\backend\main_simple.py:1437:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1437:89: error: Incompatible default for argument "user_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\main_simple.py:1437:89: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_simple.py:1437:89: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_simple.py:1465:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1465:86: error: Incompatible default for argument "user_id" (default has type "None", argument has type "str")  [assignment]
autogen\backend\main_simple.py:1465:86: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_simple.py:1465:86: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_simple.py:1478:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1478:61: error: Incompatible default for argument "endpoint" (default has type "None", argument has type "str")  [assignment]
autogen\backend\main_simple.py:1478:61: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_simple.py:1478:61: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_simple.py:1487:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1589:60: error: Argument "key" to "sorted" has incompatible type "Callable[[dict[str, object]], object]"; expected "Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]"  [arg-type]
autogen\backend\main_simple.py:1589:70: error: Incompatible return value type (got "object", expected "SupportsDunderLT[Any] | SupportsDunderGT[Any]")  [return-value]
autogen\backend\main_simple.py:1624:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1625:31: error: Need type annotation for "request_counts"  [var-annotated]
autogen\backend\main_simple.py:1644:39: error: Incompatible types in assignment (expression has type "dict[Any, int]", target has type "defaultdict[Any, int]")  [assignment]
autogen\backend\main_simple.py:1674:18: error: Call to untyped function "SystemHealth" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:1675:25: error: Call to untyped function "InternetCapabilities" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:1676:21: error: Call to untyped function "MetricsCollector" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:1677:20: error: Call to untyped function "SecurityManager" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:1684:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1684:5: note: Use "-> None" if function does not return a value
autogen\backend\main_simple.py:1688:32: error: Need type annotation for "agent_knowledge"  [var-annotated]
autogen\backend\main_simple.py:1691:33: error: Need type annotation for "user_preferences"  [var-annotated]
autogen\backend\main_simple.py:1693:9: error: Call to untyped function "init_redis_connection" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:1695:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1695:5: note: Use "-> None" if function does not return a value
autogen\backend\main_simple.py:1714:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1717:9: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1719:13: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1757:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1762:35: error: Incompatible default for argument "context" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\main_simple.py:1762:35: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_simple.py:1762:35: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_simple.py:1808:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1813:33: error: Incompatible default for argument "feedback_score" (default has type "None", argument has type "float")  [assignment]
autogen\backend\main_simple.py:1813:33: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_simple.py:1813:33: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_simple.py:1814:35: error: Incompatible default for argument "context" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\main_simple.py:1814:35: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\main_simple.py:1814:35: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\main_simple.py:1833:28: error: "object" has no attribute "__iter__"; maybe "__dir__" or "__str__"? (not iterable)  [attr-defined]
autogen\backend\main_simple.py:1903:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1939:25: error: Returning Any from function declared to return "list[dict[str, Any]] | None"  [no-any-return]
autogen\backend\main_simple.py:1949:21: error: Returning Any from function declared to return "list[dict[str, Any]] | None"  [no-any-return]
autogen\backend\main_simple.py:1970:25: error: Unsupported operand types for + ("object" and "int")  [operator]
autogen\backend\main_simple.py:1977:29: error: "object" has no attribute "append"  [attr-defined]
autogen\backend\main_simple.py:1986:16: error: Unsupported operand types for < ("int" and "object")  [operator]
autogen\backend\main_simple.py:1988:62: error: "object" has no attribute "__iter__"; maybe "__dir__" or "__str__"? (not iterable)  [attr-defined]
autogen\backend\main_simple.py:1995:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:1995:5: note: Use "-> None" if function does not return a value
autogen\backend\main_simple.py:2050:17: error: Call to untyped function "AdvancedMemorySystem" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:2149:47: error: Invalid index type "slice[None, int, None]" for "dict[str, Any]"; expected type "str"  [index]
autogen\backend\main_simple.py:2188:23: error: Call to untyped function "check_ollama_health" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:2190:27: error: Call to untyped function "auto_recover_ollama" in typed context  [no-untyped-call]
autogen\backend\main_simple.py:2275:17: error: Returning Any from function declared to return "str"  [no-any-return]
autogen\backend\main_simple.py:2465:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:2471:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:2477:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:2520:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:2529:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:2536:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:2573:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:2665:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:2774:23: error: Incompatible types in assignment (expression has type "str | BaseException", variable has type "str")  [assignment]
autogen\backend\main_simple.py:2919:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:2956:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_simple.py:2961:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:2991:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:3020:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:3078:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:3096:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_simple.py:3101:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:3125:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_simple.py:3130:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:3143:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_simple.py:3148:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:3164:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_simple.py:3169:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:3192:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_simple.py:3197:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:3213:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_simple.py:3218:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:3240:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_simple.py:3245:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:3253:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main_simple.py:3258:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main_simple.py:3290:9: error: Name "logger" is not defined  [name-defined]
autogen\backend\main.py:53:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:53:1: note: Use "-> None" if function does not return a value
autogen\backend\main.py:65:1: error: Call to untyped function "setup_logging" in typed context  [no-untyped-call]
autogen\backend\main.py:70:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:189:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:244:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:258:1: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\main.py:283:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:352:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:368:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:400:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:428:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:462:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:489:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:505:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:532:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\main.py:567:1: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\debug_connection.py:12:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\debug_connection.py:12:1: note: Use "-> None" if function does not return a value
autogen\backend\debug_connection.py:46:20: error: Incompatible types in assignment (expression has type "requests.models.Response", variable has type "httpx._models.Response")  [assignment]
autogen\backend\debug_connection.py:68:17: error: Call to untyped function "test_connection" in typed context  [no-untyped-call]
autogen\backend\tests\test_framework.py:34:31: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
autogen\backend\tests\test_framework.py:35:27: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
autogen\backend\tests\test_framework.py:37:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\tests\test_framework.py:37:5: note: Use "-> None" if function does not return a value
autogen\backend\tests\test_framework.py:39:13: error: Statement is unreachable  [unreachable]
autogen\backend\tests\test_framework.py:41:13: error: Statement is unreachable  [unreachable]
autogen\backend\tests\test_framework.py:50:17: error: Missing type parameters for generic type "Callable"  [type-arg]
autogen\backend\tests\test_framework.py:51:12: error: Missing type parameters for generic type "Callable"  [type-arg]
autogen\backend\tests\test_framework.py:52:15: error: Missing type parameters for generic type "Callable"  [type-arg]
autogen\backend\tests\test_framework.py:55:31: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
autogen\backend\tests\test_framework.py:57:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\tests\test_framework.py:57:5: note: Use "-> None" if function does not return a value
autogen\backend\tests\test_framework.py:59:13: error: Statement is unreachable  [unreachable]
autogen\backend\tests\test_framework.py:69:31: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
autogen\backend\tests\test_framework.py:70:27: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
autogen\backend\tests\test_framework.py:72:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\tests\test_framework.py:72:5: note: Use "-> None" if function does not return a value
autogen\backend\tests\test_framework.py:74:13: error: Statement is unreachable  [unreachable]
autogen\backend\tests\test_framework.py:76:13: error: Statement is unreachable  [unreachable]
autogen\backend\tests\test_framework.py:103:9: error: Need type annotation for "test_env" (hint: "test_env: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\tests\test_framework.py:105:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\tests\test_framework.py:105:5: note: Use "-> None" if function does not return a value
autogen\backend\tests\test_framework.py:116:9: error: Call to untyped function "_register_test_suites" in typed context  [no-untyped-call]
autogen\backend\tests\test_framework.py:120:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\tests\test_framework.py:120:5: note: Use "-> None" if function does not return a value
autogen\backend\tests\test_framework.py:146:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\tests\test_framework.py:146:5: note: Use "-> None" if function does not return a value
autogen\backend\tests\test_framework.py:292:36: error: Incompatible types in assignment (expression has type "datetime", target has type "int | None")  [assignment]
autogen\backend\tests\test_framework.py:317:34: error: Incompatible types in assignment (expression has type "datetime", target has type "int | None")  [assignment]
autogen\backend\tests\test_framework.py:318:43: error: Incompatible types in assignment (expression has type "float", target has type "int | None")  [assignment]
autogen\backend\tests\test_framework.py:319:9: error: Call to untyped function "_calculate_final_stats" in typed context  [no-untyped-call]
autogen\backend\tests\test_framework.py:327:49: error: Missing type parameters for generic type "Callable"  [type-arg]
autogen\backend\tests\test_framework.py:371:53: error: Missing type parameters for generic type "Callable"  [type-arg]
autogen\backend\tests\test_framework.py:389:42: error: Argument 1 to "append" of "list" has incompatible type "TestResult | BaseException"; expected "TestResult"  [arg-type]
autogen\backend\tests\test_framework.py:390:42: error: Argument 1 to "append" of "list" has incompatible type "TestResult | BaseException"; expected "TestResult"  [arg-type]
autogen\backend\tests\test_framework.py:399:30: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:444:30: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:493:30: error: Item "None" of "AsyncClient | None" has no attribute "post"  [union-attr]
autogen\backend\tests\test_framework.py:547:30: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:583:30: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:639:30: error: Item "None" of "AsyncClient | None" has no attribute "post"  [union-attr]
autogen\backend\tests\test_framework.py:682:30: error: Item "None" of "AsyncClient | None" has no attribute "post"  [union-attr]
autogen\backend\tests\test_framework.py:715:30: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:751:30: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:784:30: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:817:30: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:862:30: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:897:30: error: Item "None" of "AsyncClient | None" has no attribute "post"  [union-attr]
autogen\backend\tests\test_framework.py:931:37: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:959:35: error: Item "None" of "AsyncClient | None" has no attribute "post"  [union-attr]
autogen\backend\tests\test_framework.py:994:38: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:1036:38: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:1076:13: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\tests\test_framework.py:1078:38: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:1084:22: error: Call to untyped function "make_request" in typed context  [no-untyped-call]
autogen\backend\tests\test_framework.py:1123:44: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:1165:27: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:1212:30: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:1269:38: error: Item "None" of "AsyncClient | None" has no attribute "post"  [union-attr]
autogen\backend\tests\test_framework.py:1300:30: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:1348:9: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\tests\test_framework.py:1357:21: error: Call to untyped function "visit" in typed context  [no-untyped-call]
autogen\backend\tests\test_framework.py:1362:13: error: Call to untyped function "visit" in typed context  [no-untyped-call]
autogen\backend\tests\test_framework.py:1377:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\tests\test_framework.py:1377:5: note: Use "-> None" if function does not return a value
autogen\backend\tests\test_framework.py:1384:43: error: Incompatible types in assignment (expression has type "float | Literal[0]", target has type "int | None")  [assignment]
autogen\backend\tests\test_framework.py:1391:25: error: Unsupported operand types for / ("int" and "None")  [operator]
autogen\backend\tests\test_framework.py:1391:25: error: Unsupported operand types for / ("None" and "int")  [operator]
autogen\backend\tests\test_framework.py:1391:25: error: Unsupported left operand type for / ("None")  [operator]
autogen\backend\tests\test_framework.py:1391:25: note: Both left and right operands are unions
autogen\backend\tests\test_framework.py:1394:27: error: Need type annotation for "suite_summaries"  [var-annotated]
autogen\backend\tests\test_framework.py:1401:39: error: Unsupported operand types for / ("None" and "int")  [operator]
autogen\backend\tests\test_framework.py:1401:39: note: Left operand is of type "int | None"
autogen\backend\tests\test_framework.py:1414:30: error: Item "None" of "AsyncClient | None" has no attribute "get"  [union-attr]
autogen\backend\tests\test_framework.py:1621:19: error: Call to untyped function "setup_framework" in typed context  [no-untyped-call]
autogen\backend\tests\test_framework.py:1626:20: error: Incompatible return value type (got "dict[str, Any]", expected "list[TestResult]")  [return-value]
autogen\backend\tests\test_framework.py:1639:19: error: Call to untyped function "cleanup_framework" in typed context  [no-untyped-call]
autogen\backend\tests\test_framework.py:1648:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\tests\test_framework.py:1648:5: note: Use "-> None" if function does not return a value
autogen\backend\tests\test_framework.py:1655:17: error: Call to untyped function "main" in typed context  [no-untyped-call]
autogen\backend\services\workflow_engine.py:136:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\workflow_engine.py:136:5: note: Use "-> None" if function does not return a value
autogen\backend\services\workflow_engine.py:318:64: error: Incompatible default for argument "trigger_data" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\services\workflow_engine.py:318:64: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\workflow_engine.py:318:64: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\workflow_engine.py:364:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\workflow_engine.py:427:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\workflow_engine.py:507:13: error: Returning Any from function declared to return "bool"  [no-any-return]
autogen\backend\services\workflow_engine.py:603:9: error: Need type annotation for "result_data" (hint: "result_data: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\workflow_engine.py:693:19: error: Call to untyped function "WorkflowEngine" in typed context  [no-untyped-call]
autogen\backend\services\microservices_coordinator.py:21: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\services\microservices_coordinator.py:123:9: error: Need type annotation for "services" (hint: "services: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\microservices_coordinator.py:124:9: error: Need type annotation for "service_routes" (hint: "service_routes: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\microservices_coordinator.py:125:9: error: Need type annotation for "circuit_breakers" (hint: "circuit_breakers: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\services\microservices_coordinator.py:128:36: error: Need type annotation for "load_balancer_state"  [var-annotated]
autogen\backend\services\microservices_coordinator.py:149:9: error: Call to untyped function "_initialize_default_routes" in typed context  [no-untyped-call]
autogen\backend\services\microservices_coordinator.py:151:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\microservices_coordinator.py:151:5: note: Use "-> None" if function does not return a value
autogen\backend\services\microservices_coordinator.py:156:33: error: Call to untyped function "from_url" in typed context  [no-untyped-call]
autogen\backend\services\microservices_coordinator.py:157:19: error: "None" has no attribute "ping"  [attr-defined]
autogen\backend\services\microservices_coordinator.py:173:32: error: Incompatible types in assignment (expression has type "AsyncClient", variable has type "None")  [assignment]
autogen\backend\services\microservices_coordinator.py:176:33: error: Call to untyped function "_health_check_loop" in typed context  [no-untyped-call]
autogen\backend\services\microservices_coordinator.py:177:33: error: Call to untyped function "_circuit_breaker_monitor" in typed context  [no-untyped-call]
autogen\backend\services\microservices_coordinator.py:185:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\microservices_coordinator.py:185:5: note: Use "-> None" if function does not return a value
autogen\backend\services\microservices_coordinator.py:274:27: error: Incompatible default for argument "tags" (default has type "None", argument has type "list[str]")  [assignment]
autogen\backend\services\microservices_coordinator.py:274:27: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\microservices_coordinator.py:274:27: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\microservices_coordinator.py:275:36: error: Incompatible default for argument "metadata" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\services\microservices_coordinator.py:275:36: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\microservices_coordinator.py:275:36: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\microservices_coordinator.py:305:17: error: Statement is unreachable  [unreachable]
autogen\backend\services\microservices_coordinator.py:320:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\microservices_coordinator.py:331:15: error: "None" has no attribute "hset"  [attr-defined]
autogen\backend\services\microservices_coordinator.py:336:15: error: "None" has no attribute "sadd"  [attr-defined]
autogen\backend\services\microservices_coordinator.py:339:15: error: "None" has no attribute "expire"  [attr-defined]
autogen\backend\services\microservices_coordinator.py:341:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\microservices_coordinator.py:345:13: error: "None" has no attribute "agent"  [attr-defined]
autogen\backend\services\microservices_coordinator.py:373:19: error: "None" has no attribute "delete"  [attr-defined]
autogen\backend\services\microservices_coordinator.py:374:19: error: "None" has no attribute "srem"  [attr-defined]
autogen\backend\services\microservices_coordinator.py:378:17: error: Statement is unreachable  [unreachable]
autogen\backend\services\microservices_coordinator.py:456:9: error: Returning Any from function declared to return "ServiceInstance"  [no-any-return]
autogen\backend\services\microservices_coordinator.py:489:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\services\microservices_coordinator.py:509:30: error: "None" has no attribute "request"  [attr-defined]
autogen\backend\services\microservices_coordinator.py:519:17: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\services\microservices_coordinator.py:525:40: error: Item "None" of "ServiceInstance | None" has no attribute "id"  [union-attr]
autogen\backend\services\microservices_coordinator.py:548:13: error: Returning Any from function declared to return "bool"  [no-any-return]
autogen\backend\services\microservices_coordinator.py:552:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\microservices_coordinator.py:579:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\microservices_coordinator.py:603:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\microservices_coordinator.py:603:5: note: Use "-> None" if function does not return a value
autogen\backend\services\microservices_coordinator.py:616:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\microservices_coordinator.py:626:30: error: "None" has no attribute "get"  [attr-defined]
autogen\backend\services\microservices_coordinator.py:642:19: error: "None" has no attribute "expire"  [attr-defined]
autogen\backend\services\microservices_coordinator.py:650:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\microservices_coordinator.py:650:5: note: Use "-> None" if function does not return a value
autogen\backend\services\microservices_coordinator.py:675:25: error: Need type annotation for "service_stats"  [var-annotated]
autogen\backend\services\microservices_coordinator.py:700:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\microservices_coordinator.py:700:5: note: Use "-> None" if function does not return a value
autogen\backend\services\microservices_coordinator.py:705:17: error: Statement is unreachable  [unreachable]
autogen\backend\services\microservices_coordinator.py:708:17: error: Statement is unreachable  [unreachable]
autogen\backend\services\collaborative_workspace.py:136:31: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\collaborative_workspace.py:144:31: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\collaborative_workspace.py:156:51: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\collaborative_workspace.py:161:13: error: Returning Any from function declared to return "str"  [no-any-return]
autogen\backend\services\collaborative_workspace.py:172:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\collaborative_workspace.py:172:5: note: Use "-> None" if function does not return a value
autogen\backend\services\collaborative_workspace.py:182:25: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\collaborative_workspace.py:183:25: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\collaborative_workspace.py:191:46: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\collaborative_workspace.py:209:46: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\collaborative_workspace.py:232:46: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\services\collaborative_workspace.py:261:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\services\collaborative_workspace.py:264:34: error: Call to untyped function "ConflictResolver" in typed context  [no-untyped-call]
autogen\backend\services\collaborative_workspace.py:268:86: error: Incompatible default for argument "settings" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\services\collaborative_workspace.py:268:86: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\services\collaborative_workspace.py:268:86: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\services\collaborative_workspace.py:548:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\collaborative_workspace.py:594:34: error: Call to untyped function "WorkspaceManager" in typed context  [no-untyped-call]
autogen\backend\services\collaborative_workspace.py:601:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\collaborative_workspace.py:604:33: error: Call to untyped function "from_url" in typed context  [no-untyped-call]
autogen\backend\services\collaborative_workspace.py:610:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\services\collaborative_workspace.py:652:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:23:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:58:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:91:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:109:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:112:15: error: Call to untyped function "start_monitoring" in typed context  [no-untyped-call]
autogen\backend\routes\performance.py:124:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:127:15: error: Call to untyped function "stop_monitoring" in typed context  [no-untyped-call]
autogen\backend\routes\performance.py:138:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:163:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:194:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:211:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:254:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:283:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:296:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:312:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:378:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\routes\performance.py:409:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:55:9: error: Need type annotation for "local_cache" (hint: "local_cache: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\performance\optimization.py:64:9: error: Need type annotation for "ttl_cache" (hint: "ttl_cache: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\performance\optimization.py:66:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:66:5: note: Use "-> None" if function does not return a value
autogen\backend\performance\optimization.py:69:33: error: Call to untyped function "from_url" in typed context  [no-untyped-call]
autogen\backend\performance\optimization.py:70:19: error: "None" has no attribute "ping"  [attr-defined]
autogen\backend\performance\optimization.py:93:17: error: Statement is unreachable  [unreachable]
autogen\backend\performance\optimization.py:112:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:134:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:134:47: error: Incompatible default for argument "pattern" (default has type "None", argument has type "str")  [assignment]
autogen\backend\performance\optimization.py:134:47: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\performance\optimization.py:134:47: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\performance\optimization.py:134:64: error: Incompatible default for argument "key" (default has type "None", argument has type "str")  [assignment]
autogen\backend\performance\optimization.py:144:21: error: Statement is unreachable  [unreachable]
autogen\backend\performance\optimization.py:149:21: error: Statement is unreachable  [unreachable]
autogen\backend\performance\optimization.py:163:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:183:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:186:13: error: Statement is unreachable  [unreachable]
autogen\backend\performance\optimization.py:189:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:201:9: error: Returning Any from function declared to return "bool"  [no-any-return]
autogen\backend\performance\optimization.py:247:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:309:9: error: Need type annotation for "alerts_sent" (hint: "alerts_sent: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\performance\optimization.py:311:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:311:5: note: Use "-> None" if function does not return a value
autogen\backend\performance\optimization.py:315:33: error: Incompatible types in assignment (expression has type "Task[Any]", variable has type "None")  [assignment]
autogen\backend\performance\optimization.py:315:53: error: Call to untyped function "_monitoring_loop" in typed context  [no-untyped-call]
autogen\backend\performance\optimization.py:318:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:318:5: note: Use "-> None" if function does not return a value
autogen\backend\performance\optimization.py:322:13: error: Statement is unreachable  [unreachable]
autogen\backend\performance\optimization.py:325:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:325:5: note: Use "-> None" if function does not return a value
autogen\backend\performance\optimization.py:372:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:398:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:438:9: error: Need type annotation for "local_buckets" (hint: "local_buckets: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\performance\optimization.py:440:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:440:5: note: Use "-> None" if function does not return a value
autogen\backend\performance\optimization.py:443:33: error: Call to untyped function "from_url" in typed context  [no-untyped-call]
autogen\backend\performance\optimization.py:444:19: error: "None" has no attribute "ping"  [attr-defined]
autogen\backend\performance\optimization.py:461:17: error: Statement is unreachable  [unreachable]
autogen\backend\performance\optimization.py:510:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:510:5: note: Use "-> None" if function does not return a value
autogen\backend\performance\optimization.py:513:19: error: Call to untyped function "initialize" in typed context  [no-untyped-call]
autogen\backend\performance\optimization.py:514:19: error: Call to untyped function "initialize" in typed context  [no-untyped-call]
autogen\backend\performance\optimization.py:515:19: error: Call to untyped function "start_monitoring" in typed context  [no-untyped-call]
autogen\backend\performance\optimization.py:521:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:521:5: note: Use "-> None" if function does not return a value
autogen\backend\performance\optimization.py:524:19: error: Call to untyped function "stop_monitoring" in typed context  [no-untyped-call]
autogen\backend\performance\optimization.py:553:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\performance\optimization.py:558:15: error: Call to untyped function "initialize" in typed context  [no-untyped-call]
autogen\backend\monitoring\metrics_collector.py:18: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\monitoring\metrics_collector.py:20:13: error: Incompatible types in assignment (expression has type "None", variable has type Module)  [assignment]
autogen\backend\monitoring\metrics_collector.py:66:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:66:5: note: Use "-> None" if function does not return a value
autogen\backend\monitoring\metrics_collector.py:198:35: error: Call to untyped function "PrometheusMetrics" in typed context  [no-untyped-call]
autogen\backend\monitoring\metrics_collector.py:199:38: error: Missing type parameters for generic type "deque"  [type-arg]
autogen\backend\monitoring\metrics_collector.py:200:35: error: Missing type parameters for generic type "deque"  [type-arg]
autogen\backend\monitoring\metrics_collector.py:220:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:220:5: note: Use "-> None" if function does not return a value
autogen\backend\monitoring\metrics_collector.py:226:34: error: Incompatible types in assignment (expression has type "Thread", variable has type "None")  [assignment]
autogen\backend\monitoring\metrics_collector.py:227:9: error: "None" has no attribute "start"  [attr-defined]
autogen\backend\monitoring\metrics_collector.py:230:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:230:5: note: Use "-> None" if function does not return a value
autogen\backend\monitoring\metrics_collector.py:234:13: error: Statement is unreachable  [unreachable]
autogen\backend\monitoring\metrics_collector.py:237:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:237:5: note: Use "-> None" if function does not return a value
autogen\backend\monitoring\metrics_collector.py:241:17: error: Call to untyped function "_collect_system_metrics" in typed context  [no-untyped-call]
autogen\backend\monitoring\metrics_collector.py:242:17: error: Call to untyped function "_collect_application_metrics" in typed context  [no-untyped-call]
autogen\backend\monitoring\metrics_collector.py:243:17: error: Call to untyped function "_update_prometheus_metrics" in typed context  [no-untyped-call]
autogen\backend\monitoring\metrics_collector.py:244:17: error: Call to untyped function "_update_celery_queue_depth" in typed context  [no-untyped-call]
autogen\backend\monitoring\metrics_collector.py:250:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:250:5: note: Use "-> None" if function does not return a value
autogen\backend\monitoring\metrics_collector.py:310:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:310:5: note: Use "-> None" if function does not return a value
autogen\backend\monitoring\metrics_collector.py:348:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:348:5: note: Use "-> None" if function does not return a value
autogen\backend\monitoring\metrics_collector.py:378:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:381:13: error: Statement is unreachable  [unreachable]
autogen\backend\monitoring\metrics_collector.py:385:38: error: Incompatible types in assignment (expression has type "Redis", variable has type "None")  [assignment]
autogen\backend\monitoring\metrics_collector.py:390:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:390:5: note: Use "-> None" if function does not return a value
autogen\backend\monitoring\metrics_collector.py:393:22: error: Call to untyped function "_get_redis_client" in typed context  [no-untyped-call]
autogen\backend\monitoring\metrics_collector.py:403:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:442:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:449:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:454:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:458:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:463:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:475:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:481:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:490:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\monitoring\metrics_collector.py:492:23: error: Incompatible default for argument "agents" (default has type "None", argument has type "int")  [assignment]
autogen\backend\monitoring\metrics_collector.py:492:23: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\monitoring\metrics_collector.py:492:23: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\monitoring\metrics_collector.py:493:30: error: Incompatible default for argument "conversations" (default has type "None", argument has type "int")  [assignment]
autogen\backend\monitoring\metrics_collector.py:493:30: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\monitoring\metrics_collector.py:493:30: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\monitoring\metrics_collector.py:494:27: error: Incompatible default for argument "websockets" (default has type "None", argument has type "int")  [assignment]
autogen\backend\monitoring\metrics_collector.py:494:27: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\monitoring\metrics_collector.py:494:27: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\monitoring\metrics_collector.py:495:31: error: Incompatible default for argument "db_connections" (default has type "None", argument has type "int")  [assignment]
autogen\backend\monitoring\metrics_collector.py:495:31: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\monitoring\metrics_collector.py:495:31: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\extensions\sso_auth.py:54:56: error: Incompatible default for argument "relay_state" (default has type "None", argument has type "str")  [assignment]
autogen\backend\extensions\sso_auth.py:54:56: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\extensions\sso_auth.py:54:56: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\extensions\sso_auth.py:96:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\sso_auth.py:96:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\extensions\sso_auth.py:107:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\extensions\sso_auth.py:109:9: error: Need type annotation for "attributes" (hint: "attributes: dict[<type>, <type>] = ...")  [var-annotated]
autogen\backend\extensions\sso_auth.py:148:34: error: Argument 1 to "post" has incompatible type "Any | None"; expected "str | bytes"  [arg-type]
autogen\backend\extensions\sso_auth.py:152:9: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\extensions\sso_auth.py:157:33: error: Argument 1 to "get" has incompatible type "Any | None"; expected "str | bytes"  [arg-type]
autogen\backend\extensions\sso_auth.py:230:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\extensions\sso_auth.py:247:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\sso_auth.py:247:5: note: Use "-> None" if function does not return a value
autogen\backend\extensions\sso_auth.py:251:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\sso_auth.py:256:29: error: Incompatible types in assignment (expression has type "OAuth2Authenticator", variable has type "SAMLAuthenticator")  [assignment]
autogen\backend\extensions\sso_auth.py:260:29: error: Incompatible types in assignment (expression has type "LDAPAuthenticator", variable has type "SAMLAuthenticator")  [assignment]
autogen\backend\extensions\sso_auth.py:268:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\sso_auth.py:287:25: error: Module has no attribute "encode"  [attr-defined]
autogen\backend\extensions\sso_auth.py:308:9: error: Returning Any from function declared to return "str"  [no-any-return]
autogen\backend\extensions\sso_auth.py:313:23: error: Module has no attribute "decode"  [attr-defined]
autogen\backend\extensions\sso_auth.py:318:17: error: Returning Any from function declared to return "UserProfile | None"  [no-any-return]
autogen\backend\extensions\sso_auth.py:322:16: error: Module has no attribute "ExpiredSignatureError"  [attr-defined]
autogen\backend\extensions\sso_auth.py:329:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\sso_auth.py:337:15: error: Call to untyped function "SSOManager" in typed context  [no-untyped-call]
autogen\backend\extensions\sso_auth.py:340:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\extensions\sso_auth.py:340:1: note: Use "-> None" if function does not return a value
autogen\backend\extensions\sso_auth.py:396:1: error: Call to untyped function "initialize_sso_providers" in typed context  [no-untyped-call]
autogen\backend\core\redis_client.py:11:5: error: Returning Any from function declared to return "Redis"  [no-any-return]
autogen\backend\core\redis_client.py:11:12: error: Call to untyped function "from_url" in typed context  [no-untyped-call]
autogen\backend\core\redis_client.py:32:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\redis_client.py:32:1: note: Use "-> None" if function does not return a value
autogen\backend\core\config.py:21:19: error: No overload variant of "Field" matches argument types "bool", "str"  [call-overload]
autogen\backend\core\config.py:21:19: note: Possible overload variants:
autogen\backend\core\config.py:21:19: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:21:19: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:21:19: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:21:19: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:22:21: error: No overload variant of "Field" matches argument types "bool", "str"  [call-overload]
autogen\backend\core\config.py:22:21: note: Possible overload variants:
autogen\backend\core\config.py:22:21: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:22:21: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:22:21: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:22:21: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:23:24: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:23:24: note: Possible overload variants:
autogen\backend\core\config.py:23:24: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:23:24: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:23:24: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:23:24: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:26:25: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:26:25: note: Possible overload variants:
autogen\backend\core\config.py:26:25: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:26:25: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:26:25: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:26:25: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:27:25: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:27:25: note: Possible overload variants:
autogen\backend\core\config.py:27:25: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:27:25: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:27:25: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:27:25: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:28:25: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:28:25: note: Possible overload variants:
autogen\backend\core\config.py:28:25: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:28:25: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:28:25: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:28:25: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:29:24: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:29:24: note: Possible overload variants:
autogen\backend\core\config.py:29:24: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:29:24: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:29:24: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:29:24: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:32:23: error: No overload variant of "Field" matches argument types "EllipsisType", "str"  [call-overload]
autogen\backend\core\config.py:32:23: note: Possible overload variants:
autogen\backend\core\config.py:32:23: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:32:23: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:32:23: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:32:23: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:33:27: error: No overload variant of "Field" matches argument types "EllipsisType", "str"  [call-overload]
autogen\backend\core\config.py:33:27: note: Possible overload variants:
autogen\backend\core\config.py:33:27: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:33:27: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:33:27: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:33:27: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:34:26: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:34:26: note: Possible overload variants:
autogen\backend\core\config.py:34:26: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:34:26: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:34:26: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:34:26: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:35:31: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:35:31: note: Possible overload variants:
autogen\backend\core\config.py:35:31: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:35:31: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:35:31: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:35:31: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:38:25: error: No overload variant of "Field" matches argument types "EllipsisType", "str"  [call-overload]
autogen\backend\core\config.py:38:25: note: Possible overload variants:
autogen\backend\core\config.py:38:25: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:38:25: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:38:25: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:38:25: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:39:26: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:39:26: note: Possible overload variants:
autogen\backend\core\config.py:39:26: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:39:26: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:39:26: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:39:26: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:40:26: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:40:26: note: Possible overload variants:
autogen\backend\core\config.py:40:26: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:40:26: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:40:26: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:40:26: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:41:24: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:41:24: note: Possible overload variants:
autogen\backend\core\config.py:41:24: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:41:24: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:41:24: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:41:24: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:42:26: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:42:26: note: Possible overload variants:
autogen\backend\core\config.py:42:26: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:42:26: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:42:26: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:42:26: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:43:30: error: No overload variant of "Field" matches argument types "EllipsisType", "str"  [call-overload]
autogen\backend\core\config.py:43:30: note: Possible overload variants:
autogen\backend\core\config.py:43:30: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:43:30: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:43:30: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:43:30: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:46:22: error: No overload variant of "Field" matches argument types "EllipsisType", "str"  [call-overload]
autogen\backend\core\config.py:46:22: note: Possible overload variants:
autogen\backend\core\config.py:46:22: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:46:22: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:46:22: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:46:22: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:47:23: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:47:23: note: Possible overload variants:
autogen\backend\core\config.py:47:23: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:47:23: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:47:23: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:47:23: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:48:23: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:48:23: note: Possible overload variants:
autogen\backend\core\config.py:48:23: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:48:23: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:48:23: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:48:23: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:49:34: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:49:34: note: Possible overload variants:
autogen\backend\core\config.py:49:34: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:49:34: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:49:34: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:49:34: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:52:23: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:52:23: note: Possible overload variants:
autogen\backend\core\config.py:52:23: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:52:23: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:52:23: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:52:23: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:53:24: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:53:24: note: Possible overload variants:
autogen\backend\core\config.py:53:24: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:53:24: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:53:24: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:53:24: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:54:24: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:54:24: note: Possible overload variants:
autogen\backend\core\config.py:54:24: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:54:24: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:54:24: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:54:24: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:55:34: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:55:34: note: Possible overload variants:
autogen\backend\core\config.py:55:34: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:55:34: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:55:34: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:55:34: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:58:34: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:58:34: note: Possible overload variants:
autogen\backend\core\config.py:58:34: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:58:34: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:58:34: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:58:34: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:59:37: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:59:37: note: Possible overload variants:
autogen\backend\core\config.py:59:37: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:59:37: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:59:37: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:59:37: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:60:34: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:60:34: note: Possible overload variants:
autogen\backend\core\config.py:60:34: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:60:34: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:60:34: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:60:34: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:61:31: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:61:31: note: Possible overload variants:
autogen\backend\core\config.py:61:31: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:61:31: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:61:31: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:61:31: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:62:32: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:62:32: note: Possible overload variants:
autogen\backend\core\config.py:62:32: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:62:32: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:62:32: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:62:32: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:63:36: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:63:36: note: Possible overload variants:
autogen\backend\core\config.py:63:36: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:63:36: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:63:36: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:63:36: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:66:28: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:66:28: note: Possible overload variants:
autogen\backend\core\config.py:66:28: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:66:28: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:66:28: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:66:28: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:67:26: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:67:26: note: Possible overload variants:
autogen\backend\core\config.py:67:26: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:67:26: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:67:26: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:67:26: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:70:31: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:70:31: note: Possible overload variants:
autogen\backend\core\config.py:70:31: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:70:31: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:70:31: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:70:31: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:71:34: error: No overload variant of "Field" matches argument types "float", "str"  [call-overload]
autogen\backend\core\config.py:71:34: note: Possible overload variants:
autogen\backend\core\config.py:71:34: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:71:34: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:71:34: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:71:34: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:72:31: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:72:31: note: Possible overload variants:
autogen\backend\core\config.py:72:31: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:72:31: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:72:31: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:72:31: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:73:28: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:73:28: note: Possible overload variants:
autogen\backend\core\config.py:73:28: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:73:28: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:73:28: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:73:28: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:76:34: error: No overload variant of "Field" matches argument types "bool", "str"  [call-overload]
autogen\backend\core\config.py:76:34: note: Possible overload variants:
autogen\backend\core\config.py:76:34: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:76:34: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:76:34: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:76:34: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:77:31: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:77:31: note: Possible overload variants:
autogen\backend\core\config.py:77:31: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:77:31: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:77:31: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:77:31: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:80:37: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:80:37: note: Possible overload variants:
autogen\backend\core\config.py:80:37: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:80:37: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:80:37: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:80:37: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:81:30: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:81:30: note: Possible overload variants:
autogen\backend\core\config.py:81:30: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:81:30: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:81:30: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:81:30: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:84:35: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:84:35: note: Possible overload variants:
autogen\backend\core\config.py:84:35: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:84:35: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:84:35: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:84:35: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:85:39: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:85:39: note: Possible overload variants:
autogen\backend\core\config.py:85:39: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:85:39: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:85:39: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:85:39: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:86:31: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:86:31: note: Possible overload variants:
autogen\backend\core\config.py:86:31: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:86:31: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:86:31: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:86:31: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:87:41: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
autogen\backend\core\config.py:87:41: note: Possible overload variants:
autogen\backend\core\config.py:87:41: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:87:41: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:87:41: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:87:41: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:90:26: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:90:26: note: Possible overload variants:
autogen\backend\core\config.py:90:26: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:90:26: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:90:26: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:90:26: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:91:29: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:91:29: note: Possible overload variants:
autogen\backend\core\config.py:91:29: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:91:29: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:91:29: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:91:29: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:92:31: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:92:31: note: Possible overload variants:
autogen\backend\core\config.py:92:31: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:92:31: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:92:31: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:92:31: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:97:34: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:97:34: note: Possible overload variants:
autogen\backend\core\config.py:97:34: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:97:34: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:97:34: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:97:34: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:98:29: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:98:29: note: Possible overload variants:
autogen\backend\core\config.py:98:29: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:98:29: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:98:29: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:98:29: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:101:22: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
autogen\backend\core\config.py:101:22: note: Possible overload variants:
autogen\backend\core\config.py:101:22: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:101:22: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:101:22: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:101:22: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:104:28: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:104:28: note: Possible overload variants:
autogen\backend\core\config.py:104:28: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:104:28: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:104:28: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:104:28: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:105:25: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
autogen\backend\core\config.py:105:25: note: Possible overload variants:
autogen\backend\core\config.py:105:25: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:105:25: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:105:25: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
autogen\backend\core\config.py:105:25: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
autogen\backend\core\config.py:136:9: error: Returning Any from function declared to return "Redis"  [no-any-return]
autogen\backend\core\config.py:136:16: error: Call to untyped function "from_url" in typed context  [no-untyped-call]
autogen\backend\core\config.py:151:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\config.py:151:5: note: Use "-> None" if function does not return a value
autogen\backend\core\config.py:252:12: error: Missing named argument "SECRET_KEY" for "Settings"  [call-arg]
autogen\backend\core\config.py:252:12: error: Missing named argument "JWT_SECRET_KEY" for "Settings"  [call-arg]
autogen\backend\core\config.py:252:12: error: Missing named argument "DATABASE_URL" for "Settings"  [call-arg]
autogen\backend\core\config.py:252:12: error: Missing named argument "POSTGRES_PASSWORD" for "Settings"  [call-arg]
autogen\backend\core\config.py:252:12: error: Missing named argument "REDIS_URL" for "Settings"  [call-arg]
autogen\backend\core\config.py:255:1: error: Call to untyped function "configure_llm_clients" in typed context  [no-untyped-call]
autogen\backend\api\advanced_endpoints.py:13:1: error: Module "autogen.backend.models" has no attribute "WorkflowCreate"  [attr-defined]
autogen\backend\api\advanced_endpoints.py:13:1: error: Module "autogen.backend.models" has no attribute "WorkflowResponse"  [attr-defined]
autogen\backend\api\advanced_endpoints.py:14:1: error: Module "autogen.backend.services" has no attribute "ModelProviderManager"  [attr-defined]
autogen\backend\api\advanced_endpoints.py:14:1: error: Module "autogen.backend.services" has no attribute "WorkflowOrchestrator"  [attr-defined]
autogen\backend\api\advanced_endpoints.py:21:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:21:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:46:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:46:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:58:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:58:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:68:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:68:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:81:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:81:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:105:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:105:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:136:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:162:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:162:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:191:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:191:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:206:1: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\api\advanced_endpoints.py:225:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:128:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:149:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:175:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:206:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:224:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:250:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:284:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:316:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:342:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:369:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:403:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:425:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:441:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:455:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:497:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\workspace.py:503:27: error: Call to untyped function "get_workspace_templates" in typed context  [no-untyped-call]
autogen\backend\api\v1\workspace.py:530:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\vision.py:16:1: error: Module "security" has no attribute "AuthToken"  [attr-defined]
autogen\backend\api\v1\vision.py:16:1: error: Module "security" has no attribute "Permission"  [attr-defined]
autogen\backend\api\v1\vision.py:16:1: error: Module "security" has no attribute "require_auth"  [attr-defined]
autogen\backend\api\v1\vision.py:312:9: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\api\v1\training.py:112:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:169:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:199:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:246:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:265:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:288:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:320:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:350:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:377:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:403:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:415:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:427:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:440:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:479:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:490:36: error: Call to untyped function "get_training_templates" in typed context  [no-untyped-call]
autogen\backend\api\v1\training.py:525:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\training.py:544:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:103:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:118:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:151:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:169:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:200:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:220:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:255:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:290:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:312:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:324:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:337:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:385:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:451:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\testing.py:454:36: error: Call to untyped function "get_test_templates" in typed context  [no-untyped-call]
autogen\backend\api\v1\security.py:13:1: error: Module "security" has no attribute "Permission"  [attr-defined]
autogen\backend\api\v1\security.py:13:1: error: Module "security" has no attribute "RiskLevel"  [attr-defined]
autogen\backend\api\v1\security.py:13:1: error: Module "security" has no attribute "SecurityEventType"  [attr-defined]
autogen\backend\api\v1\security.py:13:1: error: Module "security" has no attribute "require_admin"  [attr-defined]
autogen\backend\api\v1\security.py:13:1: error: Module "security" has no attribute "require_auth"  [attr-defined]
autogen\backend\api\v1\security.py:13:1: error: Module "security" has no attribute "security_auditor"  [attr-defined]
autogen\backend\api\v1\security.py:74:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\security.py:121:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\security.py:145:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\security.py:199:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\security.py:231:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\security.py:234:5: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\api\v1\security.py:238:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\security.py:270:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\security.py:277:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\security.py:303:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\security.py:330:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\rag.py:14:1: error: Module "security" has no attribute "AuthToken"  [attr-defined]
autogen\backend\api\v1\rag.py:14:1: error: Module "security" has no attribute "Permission"  [attr-defined]
autogen\backend\api\v1\rag.py:14:1: error: Module "security" has no attribute "require_auth"  [attr-defined]
autogen\backend\api\v1\rag.py:198:40: error: Argument 1 to "loads" has incompatible type "str | None"; expected "str | bytes | bytearray"  [arg-type]
autogen\backend\api\v1\rag.py:383:54: error: Incompatible types in assignment (expression has type "float", target has type "int")  [assignment]
autogen\backend\api\v1\rag.py:387:43: error: Incompatible types in assignment (expression has type "str", target has type "int")  [assignment]
autogen\backend\api\v1\rag.py:430:9: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\api\v1\orchestrator.py:75:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:86:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:109:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:124:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:144:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:155:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:169:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:190:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:193:41: error: Incompatible default for argument "background_tasks" (default has type "None", argument has type "BackgroundTasks")  [assignment]
autogen\backend\api\v1\orchestrator.py:193:41: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\api\v1\orchestrator.py:193:41: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\api\v1\orchestrator.py:220:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:224:41: error: Incompatible default for argument "background_tasks" (default has type "None", argument has type "BackgroundTasks")  [assignment]
autogen\backend\api\v1\orchestrator.py:224:41: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\api\v1\orchestrator.py:224:41: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\api\v1\orchestrator.py:251:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:255:41: error: Incompatible default for argument "background_tasks" (default has type "None", argument has type "BackgroundTasks")  [assignment]
autogen\backend\api\v1\orchestrator.py:255:41: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\api\v1\orchestrator.py:255:41: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\api\v1\orchestrator.py:287:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:328:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:358:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:409:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\orchestrator.py:414:9: error: Need type annotation for "warnings" (hint: "warnings: list[<type>] = ...")  [var-annotated]
autogen\backend\api\v1\monitoring_dashboard.py:76:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:76:5: note: Use "-> None" if function does not return a value
autogen\backend\api\v1\monitoring_dashboard.py:152:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:173:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:173:5: note: Use "-> None" if function does not return a value
autogen\backend\api\v1\monitoring_dashboard.py:235:17: error: Call to untyped function "AlertManager" in typed context  [no-untyped-call]
autogen\backend\api\v1\monitoring_dashboard.py:236:21: error: Call to untyped function "MetricsCollector" in typed context  [no-untyped-call]
autogen\backend\api\v1\monitoring_dashboard.py:242:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:242:5: note: Use "-> None" if function does not return a value
autogen\backend\api\v1\monitoring_dashboard.py:245:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:249:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:253:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:267:21: error: Call to untyped function "WebSocketManager" in typed context  [no-untyped-call]
autogen\backend\api\v1\monitoring_dashboard.py:272:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:383:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:394:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:415:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:442:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:476:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:476:1: note: Use "-> None" if function does not return a value
autogen\backend\api\v1\monitoring_dashboard.py:508:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring_dashboard.py:508:1: note: Use "-> None" if function does not return a value
autogen\backend\api\v1\monitoring_dashboard.py:510:25: error: Call to untyped function "continuous_monitoring" in typed context  [no-untyped-call]
autogen\backend\api\v1\monitoring.py:15:1: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring.py:16:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring.py:22:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring.py:23:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\api\v1\monitoring.py:105:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\models.py:15:1: error: Module "security" has no attribute "Permission"  [attr-defined]
autogen\backend\api\v1\models.py:15:1: error: Module "security" has no attribute "require_auth"  [attr-defined]
autogen\backend\api\v1\models.py:109:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:171:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:209:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:246:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:276:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:323:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:367:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:388:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:410:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:421:26: error: Value of type variable "AnyOrLiteralStr" of "splitext" cannot be "str | None"  [type-var]
autogen\backend\api\v1\models.py:421:26: error: Item "None" of "str | None" has no attribute "lower"  [union-attr]
autogen\backend\api\v1\models.py:438:9: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\api\v1\models.py:448:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:457:9: error: Returning Any from function declared to return "list[dict[str, Any]]"  [no-any-return]
autogen\backend\api\v1\models.py:466:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:496:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:513:9: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\api\v1\models.py:524:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:531:9: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\api\v1\models.py:541:1: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\api\v1\models.py:548:9: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\api\v1\integration.py:96:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:118:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:118:54: error: Missing type parameters for generic type "dict"  [type-arg]
autogen\backend\api\v1\integration.py:131:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:155:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:182:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:195:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:219:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:253:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:275:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:294:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:313:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:329:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:354:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:377:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:389:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:407:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\integration.py:428:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\dashboard.py:22:1: error: Module "security" has no attribute "AuthToken"  [attr-defined]
autogen\backend\api\v1\dashboard.py:22:1: error: Module "security" has no attribute "Permission"  [attr-defined]
autogen\backend\api\v1\dashboard.py:22:1: error: Module "security" has no attribute "require_admin"  [attr-defined]
autogen\backend\api\v1\dashboard.py:22:1: error: Module "security" has no attribute "require_auth"  [attr-defined]
autogen\backend\api\v1\dashboard.py:420:12: error: Unsupported operand types for < ("int" and "object")  [operator]
autogen\backend\api\v1\dashboard.py:422:14: error: Unsupported operand types for < ("int" and "object")  [operator]
autogen\backend\api\v1\custom_agents.py:67:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:78:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:99:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:110:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:129:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:144:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:157:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:173:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:188:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:203:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:219:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:234:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:249:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:265:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:298:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:342:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\custom_agents.py:365:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\auth.py:29:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\api\v1\auth.py:54:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\api\v1\auth.py:62:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\api\v1\auth.py:78:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\api\v1\auth.py:96:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\api\v1\auth.py:102:5: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\api\v1\auth.py:198:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\auth.py:427:5: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
autogen\backend\api\v1\audio.py:29:1: error: Module "security" has no attribute "AuthToken"  [attr-defined]
autogen\backend\api\v1\audio.py:29:1: error: Module "security" has no attribute "Permission"  [attr-defined]
autogen\backend\api\v1\audio.py:29:1: error: Module "security" has no attribute "require_auth"  [attr-defined]
autogen\backend\api\v1\audio.py:432:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:89:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:110:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:122:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:152:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:186:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:204:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:245:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:283:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:305:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:317:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:329:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:351:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:385:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:403:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\analytics.py:406:24: error: Call to untyped function "get_realtime_status" in typed context  [no-untyped-call]
autogen\backend\api\v1\agents.py:19:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:68:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:84:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:90:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:134:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:184:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:210:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:230:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:258:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:284:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:316:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:324:19: error: Need type annotation for "results"  [var-annotated]
autogen\backend\api\v1\agents.py:366:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:386:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agents.py:405:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agenda.py:15:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\agenda.py:20:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\middleware.py:63:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\middleware.py:64:31: error: Need type annotation for "request_counts"  [var-annotated]
autogen\backend\security\middleware.py:65:36: error: Need type annotation for "user_request_counts"  [var-annotated]
autogen\backend\security\middleware.py:115:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\middleware.py:129:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\middleware.py:145:29: error: Call to untyped function "RateLimiter" in typed context  [no-untyped-call]
autogen\backend\security\middleware.py:291:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\middleware.py:309:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\middleware.py:344:57: error: Item "None" of "HTTPAuthorizationCredentials | None" has no attribute "credentials"  [union-attr]
autogen\backend\security\middleware.py:357:24: error: Incompatible return value type (got "APIKey", expected "AuthToken | None")  [return-value]
autogen\backend\security\middleware.py:383:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\middleware.py:388:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\security\middleware.py:393:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\llm_clients.py:28: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\core\llm_clients.py:33: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\core\llm_clients.py:39: error: Unused "type: ignore" comment  [unused-ignore]
autogen\backend\core\llm_clients.py:54:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\llm_clients.py:88:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\llm_clients.py:91:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\llm_clients.py:146:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:133:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:152:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:187:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:222:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:266:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:269:41: error: Incompatible default for argument "background_tasks" (default has type "None", argument has type "BackgroundTasks")  [assignment]
autogen\backend\api\v1\enterprise.py:269:41: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\api\v1\enterprise.py:269:41: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\api\v1\enterprise.py:291:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:300:9: error: Need type annotation for "events" (hint: "events: list[<type>] = ...")  [var-annotated]
autogen\backend\api\v1\enterprise.py:342:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:347:41: error: Incompatible default for argument "background_tasks" (default has type "None", argument has type "BackgroundTasks")  [assignment]
autogen\backend\api\v1\enterprise.py:347:41: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\api\v1\enterprise.py:347:41: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\api\v1\enterprise.py:382:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:385:41: error: Incompatible default for argument "background_tasks" (default has type "None", argument has type "BackgroundTasks")  [assignment]
autogen\backend\api\v1\enterprise.py:385:41: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\api\v1\enterprise.py:385:41: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\api\v1\enterprise.py:421:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:456:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:495:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:532:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:570:1: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\api\v1\enterprise.py:571:95: error: Incompatible default for argument "details" (default has type "None", argument has type "dict[str, Any]")  [assignment]
autogen\backend\api\v1\enterprise.py:571:95: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autogen\backend\api\v1\enterprise.py:571:95: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autogen\backend\core\base_agent.py:144:13: error: Call to untyped function "_initialize_vector_store" in typed context  [no-untyped-call]
autogen\backend\core\base_agent.py:155:13: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
autogen\backend\core\base_agent.py:160:13: error: Function is missing a type annotation  [no-untyped-def]
autogen\backend\core\base_agent.py:243:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\base_agent.py:243:5: note: Use "-> None" if function does not return a value
autogen\backend\core\base_agent.py:261:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\base_agent.py:261:5: note: Use "-> None" if function does not return a value
autogen\backend\core\base_agent.py:265:15: error: Call to untyped function "_on_start" in typed context  [no-untyped-call]
autogen\backend\core\base_agent.py:267:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\base_agent.py:267:5: note: Use "-> None" if function does not return a value
autogen\backend\core\base_agent.py:271:15: error: Call to untyped function "_on_stop" in typed context  [no-untyped-call]
autogen\backend\core\base_agent.py:273:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\base_agent.py:273:5: note: Use "-> None" if function does not return a value
autogen\backend\core\base_agent.py:277:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\base_agent.py:277:5: note: Use "-> None" if function does not return a value
autogen\backend\core\base_agent.py:292:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\base_agent.py:330:17: error: Statement is unreachable  [unreachable]
autogen\backend\core\base_agent.py:396:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\base_agent.py:401:5: error: Function is missing a return type annotation  [no-untyped-def]
autogen\backend\core\base_agent.py:411:9: error: Need type annotation for "conversation_log" (hint: "conversation_log: list[<type>] = ...")  [var-annotated]
autogen\backend\core\base_agent.py:473:17: error: Returning Any from function declared to return "str"  [no-any-return]
Found 1870 errors in 94 files (checked 104 source files)

Return code: 1

=== src/ ===
src\db\workflows_repo.py:14:5: error: Function is missing a return type annotation  [no-untyped-def]
src\db\workflows_repo.py:18:5: error: Function is missing a return type annotation  [no-untyped-def]
src\db\workflows_repo.py:19:14: error: Call to untyped function "_conn" in typed context  [no-untyped-call]
src\db\workflows_repo.py:34:5: error: Function is missing a return type annotation  [no-untyped-def]
src\db\workflows_repo.py:35:14: error: Call to untyped function "_conn" in typed context  [no-untyped-call]
src\db\workflows_repo.py:49:14: error: Call to untyped function "_conn" in typed context  [no-untyped-call]
src\db\workflows_repo.py:68:5: error: Function is missing a return type annotation  [no-untyped-def]
src\db\workflows_repo.py:69:14: error: Call to untyped function "_conn" in typed context  [no-untyped-call]
src\db\workflows_repo.py:101:14: error: Call to untyped function "_conn" in typed context  [no-untyped-call]
src\db\conversations_repo.py:15:5: error: Function is missing a return type annotation  [no-untyped-def]
src\db\conversations_repo.py:18:5: error: Function is missing a return type annotation  [no-untyped-def]
src\db\conversations_repo.py:19:14: error: Call to untyped function "_conn" in typed context  [no-untyped-call]
src\db\conversations_repo.py:35:5: error: Function is missing a return type annotation  [no-untyped-def]
src\db\conversations_repo.py:36:14: error: Call to untyped function "_conn" in typed context  [no-untyped-call]
src\db\conversations_repo.py:51:14: error: Call to untyped function "_conn" in typed context  [no-untyped-call]
src\db\conversations_repo.py:84:14: error: Call to untyped function "_conn" in typed context  [no-untyped-call]
src\db\conversations_repo.py:90:17: error: List comprehension has incompatible type List[dict[str, Any] | None]; expected List[dict[str, Any]]  [misc]
src\db\agents_repo.py:28:5: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
src\db\agents_repo.py:47:5: error: Function is missing a return type annotation  [no-untyped-def]
src\db\agents_repo.py:71:14: error: Call to untyped function "_connect" in typed context  [no-untyped-call]
src\db\agents_repo.py:101:14: error: Call to untyped function "_connect" in typed context  [no-untyped-call]
src\db\agents_repo.py:110:14: error: Call to untyped function "_connect" in typed context  [no-untyped-call]
src\db\agents_repo.py:117:14: error: Call to untyped function "_connect" in typed context  [no-untyped-call]
src\db\agents_repo.py:119:13: error: Returning Any from function declared to return "bool"  [no-any-return]
src\db\agents_repo.py:122:14: error: Call to untyped function "_connect" in typed context  [no-untyped-call]
src\db\agents_repo.py:124:13: error: Returning Any from function declared to return "int"  [no-any-return]
Found 26 errors in 3 files (checked 4 source files)

Return code: 1

=== tests/ ===
autogen\ultimate_enterprise_summary.py:647:9: error: Unexpected indent  [syntax]
Found 1 error in 1 file (errors prevented further checking)

Return code: 2
